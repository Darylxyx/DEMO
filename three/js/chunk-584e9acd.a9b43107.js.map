{"version":3,"sources":["webpack:///./src/views/Shader.vue?c634","webpack:///src/views/Shader.vue","webpack:///./src/views/Shader.vue?a51e","webpack:///./src/views/Shader.vue","webpack:///./src/views/Shader.vue?5856"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","id","staticRenderFns","mainGroup","THREE","Group","Shadervue_type_script_lang_js_","mixins","threeMixin","methods","initWebGL","_this$initBasics","initBasics","$refs","canvas","position","x","y","z","clearColor","scene","camera","renderer","plane","addPlane","controls","addControl","add","clock","Clock","renderScene","material","uniforms","time","value","delta","getDelta","update","requestAnimationFrame","addAxes","axes","initAxes","geom","initGeometry","mat","createMaterial","Mesh","vertexShader","initVertexShader","fragmentShader","initFragmentShader","tDiffuse","type","bitSize","resolution","v2","window","innerWidth","innerHeight","ShaderMaterial","transparent","vs","fs","control","initControls","rotateSpeed","zoomSpeed","panSpeed","mounted","views_Shadervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Shader_vue_vue_type_style_index_0_id_3c5e54be_lang_less_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Shader_vue_vue_type_style_index_0_id_3c5e54be_lang_less_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"gJAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BE,IAAA,UAAYF,EAAA,OAAYE,IAAA,SAAAC,MAAA,CAAoBC,GAAA,qBAChKC,EAAA,eCSAC,EAAA,IAAAC,MAAAC,MACAC,EAAA,CACAC,OAAA,CAAAC,EAAA,MACAC,QAAA,CACAC,UADA,WACA,IAAAC,EAKAjB,KAAAkB,WAAAlB,KAAAmB,MAAAC,OAAA,CAAAC,SAAA,CAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,MAAAC,WAAA,WAHAC,EAFAT,EAEAS,MACAC,EAHAV,EAGAU,OACAC,EAJAX,EAIAW,SAEA5B,KAAA0B,QACA1B,KAAA2B,SACA3B,KAAA4B,WAIA,IAAAC,EAAA7B,KAAA8B,WAEAC,EAAA/B,KAAAgC,aAEAN,EAAAO,IAAAxB,GAEA,IAAAyB,EAAA,IAAAxB,MAAAyB,MACAC,EAAA,SAAAA,IAEAP,EAAAQ,SAAAC,SAAAC,KAAAC,OAAA,IAEA,IAAAC,EAAAP,EAAAQ,WACAX,EAAAY,OAAAF,GACAG,sBAAAR,GACAR,EAAA9B,OAAA4B,EAAAC,IAGAS,KAEAS,QAhCA,WAiCA,IAAAC,EAAA9C,KAAA+C,WACAtC,EAAAwB,IAAAa,IAEAhB,SApCA,WAqCA,IAAAkB,EAAAhD,KAAAiD,aAAA,eAEAC,EAAAlD,KAAAmD,iBACAtB,EAAA,IAAAnB,MAAA0C,KAAAJ,EAAAE,GAEA,OADAzC,EAAAwB,IAAAJ,GACAA,GAEAsB,eA5CA,WA6CA,IAAAE,EAAArD,KAAAsD,mBACAC,EAAAvD,KAAAwD,qBAEAlB,EAAA,CACAmB,SAAA,CAAAC,KAAA,IAAAlB,MAAA,MACAmB,QAAA,CAAAD,KAAA,IAAAlB,MAAA,GACAD,KAAA,CAAAmB,KAAA,IAAAlB,MAAA,IACAoB,WAAA,CAAAF,KAAA,KAAAlB,MAAAxC,KAAA6D,GAAAC,OAAAC,WAAAD,OAAAE,eAGAd,EAAA,IAAAxC,MAAAuD,eAAA,CACA3B,WACAe,eACAE,iBACAW,aAAA,IAIA,OAAAhB,GAEAI,iBAjEA,WAkEA,IAAAa,EAAA,ohBAaA,OAAAA,GAEAX,mBAjFA,WAkFA,IAAAY,EAAA,uyCA+BA,OAAAA,GAEApC,WAnHA,WAoHA,IAAAqC,EAAArE,KAAAsE,aAAA,YAAAtE,KAAA2B,OAAA,CACA4C,YAAA,EACAC,UAAA,EACAC,SAAA,IAEA,OAAAJ,IAGAK,QA9HA,WA+HA1E,KAAAgB,cC1IgV2D,EAAA,0BCQhVC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA7E,EACAU,GACF,EACA,KACA,WACA,MAIeuE,EAAA,WAAAH,+CCnBf,IAAAI,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAoiBE,EAAG","file":"js/chunk-584e9acd.a9b43107.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"stats\"}),_c('div',{ref:\"canvas\",attrs:{\"id\":\"WebGL-output\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div ref='stats'></div>\n        <div ref='canvas' id='WebGL-output'></div>\n        <!-- <h1>着色器</h1> -->\n    </div>\n</template>\n<script>\nimport mixin from '../mixins/threeMixin';\n\nconst mainGroup = new THREE.Group();\nexport default {\n    mixins: [mixin],\n    methods: {\n        initWebGL() {\n            const {\n                scene,\n                camera,\n                renderer,\n            } = this.initBasics(this.$refs.canvas, { position: { x: 0, y: 0, z: 40 } }, { clearColor: 0xf1f1f1 });\n            this.scene = scene;\n            this.camera = camera;\n            this.renderer = renderer;\n\n            // this.addAxes();\n\n            const plane = this.addPlane();\n\n            const controls = this.addControl();\n\n            scene.add(mainGroup);\n\n            const clock = new THREE.Clock();\n            const renderScene = () => {\n\n                plane.material.uniforms.time.value += 0.01;\n\n                const delta = clock.getDelta();\n                controls.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene, camera);\n            };\n\n            renderScene();\n        },\n        addAxes() {\n            const axes = this.initAxes();\n            mainGroup.add(axes);\n        },\n        addPlane() {\n            const geom = this.initGeometry('Plane', 60, 30);\n            // const geom = this.initGeometry('Sphere', 30, 30, 30);\n            const mat = this.createMaterial();\n            const plane = new THREE.Mesh(geom, mat);\n            mainGroup.add(plane);\n            return plane;\n        },\n        createMaterial() {\n            const vertexShader = this.initVertexShader();\n            const fragmentShader = this.initFragmentShader();\n\n            const uniforms = {\n                tDiffuse: { type: 't', value: null },\n                bitSize: { type: 'i', value: 4 },\n                time: { type: 'f', value: 0.2 },\n                resolution: { type: 'v2', value: this.v2(window.innerWidth, window.innerHeight) },\n            };\n\n            const mat = new THREE.ShaderMaterial({\n                uniforms,\n                vertexShader,\n                fragmentShader,\n                transparent: true,\n                // side: THREE.DoubleSide,\n            });\n\n            return mat;\n        },\n        initVertexShader() {\n            const vs = `\n                uniform float time;\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    vec3 posChanged = position;\n                    // posChanged.x = posChanged.x * (abs(sin(time)));\n                    // posChanged.y = posChanged.y * (abs(sin(time)));\n                    // posChanged.z = posChanged.z * (abs(sin(time)));\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(posChanged, 1.0);\n                }\n            `;\n            return vs;\n        },\n        initFragmentShader() {\n            const fs = `\n                // uniform int bitSize;\n                // uniform sampler2D tDiffuse;\n                varying vec2 vUv;\n\n                // void main() {\n                //     vec4 texel = texture2D(tDiffuse, vUv);\n                //     float n = pow(float(bitSize), 2.0);\n                //     float newR = floor(texel.r * n) / n;\n                //     float newG = floor(texel.g * n) / n;\n                //     float newB = floor(texel.b * n) / n;\n                //     // gl_FragColor = vec4(vec3(newR, newG, newB), 1.0);\n                //     gl_FragColor = vec4(0.0, 0.0, 255.0, 0.5);\n                // }\n\n                // precision mediump float;\n                uniform float time;\n                uniform vec2 resolution;\n\n                void main() {\n                    vec3 color = vec3(1.0, 0.5, 0.4);\n\n                    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\n                    float a = (sin(p.x*p.y * 1.0 + time*0.2) + sin(p.x*p.x * 5.0 + time * 26.0)/3.0 + sin(p.x * 5.0 + time * 11.0)/6.0 + sin(p.x*p.x + time * 16.0)/4.0)*0.15;\n\n                    float f = 0.4 / abs(abs(cos(time * 0.11)) * p.y + p.x * p.x * 3.0 + a);\n\n                    gl_FragColor = vec4(color * f, 1.0);\n                }\n            `;\n            return fs;\n        },\n        addControl() {\n            const control = this.initControls('Trackball', this.camera, {\n                rotateSpeed: 1.0,\n                zoomSpeed: 1.0,\n                panSpeed: 1.0,\n            });\n            return control;\n        },\n    },\n    mounted() {\n        this.initWebGL();\n    }\n};\n</script>\n\n<style lang='less' scoped>\n#WebGL-output{\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Shader.vue?vue&type=template&id=3c5e54be&scoped=true&\"\nimport script from \"./Shader.vue?vue&type=script&lang=js&\"\nexport * from \"./Shader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Shader.vue?vue&type=style&index=0&id=3c5e54be&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3c5e54be\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shader.vue?vue&type=style&index=0&id=3c5e54be&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shader.vue?vue&type=style&index=0&id=3c5e54be&lang=less&scoped=true&\""],"sourceRoot":""}