(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-584e9acd"],{"4b99":function(n,e,t){},6048:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[t("div",{ref:"stats"}),t("div",{ref:"canvas",attrs:{id:"WebGL-output"}})])},a=[],r=t("f383"),o=new THREE.Group,s={mixins:[r["a"]],methods:{initWebGL:function(){var n=this.initBasics(this.$refs.canvas,{position:{x:0,y:0,z:40}},{clearColor:15856113}),e=n.scene,t=n.camera,i=n.renderer;this.scene=e,this.camera=t,this.renderer=i;var a=this.addPlane(),r=this.addControl();e.add(o);var s=new THREE.Clock,l=function n(){a.material.uniforms.time.value+=.01;var o=s.getDelta();r.update(o),requestAnimationFrame(n),i.render(e,t)};l()},addAxes:function(){var n=this.initAxes();o.add(n)},addPlane:function(){var n=this.initGeometry("Plane",60,30),e=this.createMaterial(),t=new THREE.Mesh(n,e);return o.add(t),t},createMaterial:function(){var n=this.initVertexShader(),e=this.initFragmentShader(),t={tDiffuse:{type:"t",value:null},bitSize:{type:"i",value:4},time:{type:"f",value:.2},resolution:{type:"v2",value:this.v2(window.innerWidth,window.innerHeight)}},i=new THREE.ShaderMaterial({uniforms:t,vertexShader:n,fragmentShader:e,transparent:!0});return i},initVertexShader:function(){var n="\n                uniform float time;\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    vec3 posChanged = position;\n                    // posChanged.x = posChanged.x * (abs(sin(time)));\n                    // posChanged.y = posChanged.y * (abs(sin(time)));\n                    // posChanged.z = posChanged.z * (abs(sin(time)));\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(posChanged, 1.0);\n                }\n            ";return n},initFragmentShader:function(){var n="\n                // uniform int bitSize;\n                // uniform sampler2D tDiffuse;\n                varying vec2 vUv;\n\n                // void main() {\n                //     vec4 texel = texture2D(tDiffuse, vUv);\n                //     float n = pow(float(bitSize), 2.0);\n                //     float newR = floor(texel.r * n) / n;\n                //     float newG = floor(texel.g * n) / n;\n                //     float newB = floor(texel.b * n) / n;\n                //     // gl_FragColor = vec4(vec3(newR, newG, newB), 1.0);\n                //     gl_FragColor = vec4(0.0, 0.0, 255.0, 0.5);\n                // }\n\n                // precision mediump float;\n                uniform float time;\n                uniform vec2 resolution;\n\n                void main() {\n                    vec3 color = vec3(1.0, 0.5, 0.4);\n\n                    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\n                    float a = (sin(p.x*p.y * 1.0 + time*0.2) + sin(p.x*p.x * 5.0 + time * 26.0)/3.0 + sin(p.x * 5.0 + time * 11.0)/6.0 + sin(p.x*p.x + time * 16.0)/4.0)*0.15;\n\n                    float f = 0.4 / abs(abs(cos(time * 0.11)) * p.y + p.x * p.x * 3.0 + a);\n\n                    gl_FragColor = vec4(color * f, 1.0);\n                }\n            ";return n},addControl:function(){var n=this.initControls("Trackball",this.camera,{rotateSpeed:1,zoomSpeed:1,panSpeed:1});return n}},mounted:function(){this.initWebGL()}},l=s,d=(t("934f"),t("2877")),u=Object(d["a"])(l,i,a,!1,null,"3c5e54be",null);e["default"]=u.exports},"934f":function(n,e,t){"use strict";var i=t("4b99"),a=t.n(i);a.a}}]);
//# sourceMappingURL=chunk-584e9acd.7822cd7e.js.map