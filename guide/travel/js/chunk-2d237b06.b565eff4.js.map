{"version":3,"sources":["webpack:///./src/views/Share.vue?fa46","webpack:///./src/mixins/Share/center.js","webpack:///./src/mixins/Share/drawLine.js","webpack:///src/views/Share.vue","webpack:///./src/views/Share.vue?5001","webpack:///./src/views/Share.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","id","staticRenderFns","center","methods","addCenter","centerGroup","THREE","Group","bdTexture","loadTexture","bdMat","SpriteMaterial","map","bd","Sprite","scale","set","bindCenterAnim","add","bgTexture","bgMat","bg","position","pa","i","picIndex","Math","round","texture","concat","mat","transparent","opacity","line","bindLineAnim","mainGroup","obj","a","y","tween","createTween","start","end","duration","repeat","Infinity","yoyo","easing","onUpdate","o","random","delay","TWEEN","Tween","to","lineArr","x","shift","drawLine","_this","colorList","hex","type","rgb","r","g","b","BezierGroup","lineGroup","forEach","color","length","pointsList","interpolation","Bezier","initBezier","BezierList","push","addLineAnim","data","z","_this$countMid","countMid","p1","p2","v","calcVector","vl","calcVectorLength","uv","vectorUnit","d1","d2","m1","vectorAdd","vectorNumMultiply","m2","sv","vectorProduct","_this2","_loop","pointsGeom","Geometry","endGeom","verticesGroup","geom","fromBufferGeometry","geometry","mergeVertices","vertices","points","addPoints","ends","I","animList","assign_default","verticesNeedUpdate","firstAnim","lastAnim","onComplete","timer","window","setTimeout","clearTimeout","next","chain","PI","cos","sin","floor","Sharevue_type_script_lang_js_THREE","Sharevue_type_script_lang_js_TWEEN","Sharevue_type_script_lang_js_","mixins","threeMixin","math","common","sectionList","name","icon","columnList","initWebGL","_this$initBasics","initBasics","$refs","canvas","antialias","clearColor","shadowEnabled","scene","camera","renderer","resetCameraPosition","addColumn","addSection","addBackground","renderScene","update","requestAnimationFrame","sectionGroup","sec","gp","sprite","tp","textColor","text","textSprite","columnGroup","num","distance","s","d","redT","redMat","greenT","greenMat","blueT","blueMat","bgT","matArr","views_Sharevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d237b06.b565eff4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{ref:\"stats\"}),_c('div',{ref:\"canvas\",attrs:{\"id\":\"WebGL-output\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\n    methods: {\n        addCenter() {\n            const centerGroup = new THREE.Group();\n            const bdTexture = this.loadTexture('img/building.png');\n            const bdMat = new THREE.SpriteMaterial({ map: bdTexture });\n            const bd = new THREE.Sprite(bdMat);\n            bd.scale.set(65, 65, 65);\n            this.bindCenterAnim(bd);\n            centerGroup.add(bd);\n\n            const bgTexture = this.loadTexture('img/building-bg.png');\n            const bgMat = new THREE.SpriteMaterial({ map: bgTexture });\n            const bg = new THREE.Sprite(bgMat);\n            bg.scale.set(90, 90, 90);\n            centerGroup.add(bg);\n            centerGroup.position.set(-20, 5, 0);\n\n            // 飞线\n            const pa = [-20, 22, -7, 2, 3, 30];\n            for (let i = 0; i < 6; i++) {\n                const picIndex = Math.round(i / 2 + 0.5);\n                const texture = this.loadTexture(`img/line${picIndex}.png`);\n                const mat = new THREE.SpriteMaterial({ map: texture, transparent: true, opacity: 0.5 });\n                const line = new THREE.Sprite(mat);\n                line.scale.set(0.6, 12, 1);\n                line.position.set(pa[i], -15, -1);\n                this.bindLineAnim(line);\n                centerGroup.add(line);\n            }\n\n            this.mainGroup.add(centerGroup);\n        },\n        bindCenterAnim(obj) {\n            const a = { y: 0 };\n            const tween = this.createTween({\n                start: a,\n                end: { y: 2 },\n                duration: 2000,\n                repeat: Infinity,\n                yoyo: true,\n                easing: 'InOut',\n                onUpdate: (o) => {\n                    obj.position.y = o.y;\n                },\n            });\n            tween.start();\n        },\n        bindLineAnim(obj) {\n            const a = { y: -15 };\n            const duration = Math.random() * 1000 + 500;\n            const delay = Math.random() * 1000;\n            const tween = new TWEEN.Tween(a)\n                .to({ y: 100 }, duration)\n                .onUpdate((o) => {\n                    obj.position.y = o.y;\n                })\n                .delay(delay)\n                .repeat(Infinity);\n            tween.start();\n        },\n    },\n};","const { random, round } = Math;\n\n// 飞线数据\nconst lineArr = [{\n    start: { x: -65, y: -47 },\n    end: { x: -39, y: -20 },\n    shift: 15,\n}, {\n    start: { x: -173, y: 40 },\n    end: { x: -45, y: -9 },\n    shift: 40,\n}, {\n    start: { x: -173, y: -10 },\n    end: { x: -51, y: -13 },\n    shift: 30,\n}, {\n    start: { x: -155, y: -70 },\n    end: { x: -43, y: -18 },\n    shift: -25,\n}, {\n    start: { x: -115, y: -32 },\n    end: { x: -46, y: -16 },\n    shift: -10,\n}, {\n    start: { x: -115, y: 18 },\n    end: { x: -48, y: -11 },\n    shift: 15,\n}, {\n    start: { x: 25, y: -47 },\n    end: { x: -1, y: -20 },\n    shift: -15,\n}, {\n    start: { x: 100, y: -70 },\n    end: { x: 2, y: -18 },\n    shift: 25,\n}, {\n    start: { x: 70, y: 18 },\n    end: { x: 8, y: -11 },\n    shift: -15,\n}, {\n    start: { x: 70, y: -32 },\n    end: { x: 6, y: -16 },\n    shift: 15,\n}, {\n    start: { x: 130, y: 40 },\n    end: { x: 6, y: -10 },\n    shift: -30,\n}, {\n    start: { x: 130, y: -10 },\n    end: { x: 10, y: -13 },\n    shift: -25,\n}];\n\nexport default {\n    methods: {\n        drawLine() {\n            const colorList = [{\n                hex: 0x1FCBF8,\n                type: 'blue',\n                rgb: { r: 31, g: 203, b: 248 },\n            }, { \n                hex: 0xD9B91C,\n                type: 'yellow',\n                rgb: { r: 217, g: 185, b: 28 },\n            }];\n            // 以颜色分组\n            const BezierGroup = {};\n            this.lineGroup = new THREE.Group();\n            lineArr.forEach((line) => {\n                const color = colorList[round(random() * (colorList.length - 1))];\n                const pointsList = this.interpolation(line);\n                const Bezier = this.initBezier(pointsList, {\n                    color: color.hex,\n                    transparent: true,\n                    opacity: 0.9,\n                });\n                if (!BezierGroup[color.type]) {\n                    BezierGroup[color.type] = {\n                        BezierList: [],\n                        rgb: color.rgb,\n                    };\n                }\n                BezierGroup[color.type].BezierList.push(Bezier);\n                this.lineGroup.add(Bezier);\n            });\n            this.addLineAnim(BezierGroup);\n            this.mainGroup.add(this.lineGroup);\n        },\n        interpolation(data) { // 样条插值\n            const { start, end, shift } = data;\n            start.z = 0;\n            end.z = 0;\n            const { p1, p2 } = this.countMid(start, end, shift);\n            return [start, p1, p2, end];\n        },\n        countMid(start, end, shift) {\n            const v = this.calcVector(start, end);\n            const vl = this.calcVectorLength(v);\n            const uv = this.vectorUnit(v);\n            const d1 = vl * 0.5;\n            const d2 = vl * 0.7;\n            const m1 = this.vectorAdd(start, this.vectorNumMultiply(uv, d1));\n            const m2 = this.vectorAdd(start, this.vectorNumMultiply(uv, d2));\n            // 垂直向量\n            const sv = this.vectorProduct(uv, { x: 0, y: 0, z: -1 }, true);\n            const p1 = this.vectorAdd(m1, this.vectorNumMultiply(sv, shift));\n            const p2 = this.vectorAdd(m2, this.vectorNumMultiply(this.vectorNumMultiply(sv, -0.5), shift));\n            return { p1, p2 };\n        },\n        addLineAnim(data) {\n            for (let o in data) {\n                // 动画点集\n                const pointsGeom = new THREE.Geometry();\n                // 端点点集\n                const endGeom = new THREE.Geometry();\n                // 补间点集，运于动画\n                const verticesGroup = [];\n                data[o].BezierList.forEach((Bezier) => {\n                    const geom = new THREE.Geometry().fromBufferGeometry(Bezier.geometry);\n                    geom.mergeVertices();\n                    pointsGeom.vertices.push(geom.vertices[0]);\n                    endGeom.vertices.push(geom.vertices[geom.vertices.length - 1]);\n                    verticesGroup.push(geom.vertices);\n                });\n\n                const points = this.addPoints(pointsGeom, data[o].rgb);\n                this.lineGroup.add(points);\n                const ends = this.addPoints(endGeom, data[o].rgb, 2);\n                this.lineGroup.add(ends);\n\n                verticesGroup.forEach((vertices, I) => { // 此处的索引I用于表示哪根动画轨迹\n                    const animList = [];\n                    // start 用于一轮动画结束复位\n                    const start = Object.assign({}, vertices[0]);\n                    const obj = points.geometry.vertices[I];\n                    const duration = random() * 50 + 50;\n                    const delay = random() * 1000;\n                    vertices.forEach((v, i) => {\n                        if (i === 0) return;\n                        const { x, y, z } = v;\n                        const tween = this.createTween({\n                            start: obj,\n                            end: { x, y, z },\n                            duration,\n                            onUpdate: () => {\n                                points.geometry.verticesNeedUpdate = true;\n                            },\n                        });\n                        animList.push(tween);\n                    });\n\n                    const firstAnim = animList[0];\n                    const lastAnim = animList[animList.length - 1];\n                    lastAnim.onComplete(() => {\n                        points.geometry.verticesNeedUpdate = true;\n                        obj.z = -100;\n                        const timer = window.setTimeout(() => {\n                            window.clearTimeout(timer);\n                            points.geometry.verticesNeedUpdate = true;\n                            obj.x = start.x;\n                            obj.y = start.y;\n                            obj.z = start.z;\n                            firstAnim.start();\n                        }, delay);\n                    });\n\n                    animList.forEach((a, i) => {\n                        if (i === animList.length - 1) {\n                            return;\n                        };\n                        const next = animList[i+1];\n                        a.chain(next);\n                    });\n                    firstAnim.start();\n                });\n            }\n        },\n    },\n};","<template>\n    <div class='container'>\n        <!-- <div v-show='isLoading' class='loading'>Loading...</div> -->\n        <div ref='stats'></div>\n        <div ref='canvas' id='WebGL-output'></div>\n    </div>\n</template>\n\n<script>\nimport math from '../mixins/math.js';\nimport mixin from '../mixins/threeMixin.js';\nimport common from '../mixins/common.js';\nimport center from '../mixins/Share/center.js';\nimport line from '../mixins/Share/drawLine.js';\n\nconst { PI, cos, sin, floor } = Math;\nconst { THREE, TWEEN } = window;\nexport default {\n    mixins: [mixin, math, common, center, line],\n    data() {\n        return {\n            sectionList: [{\n                name: '气象局',\n                icon: 'qxj',\n                position: {  x: -193, y: 50, z: 0 },\n            }, {\n                name: '卫健局',\n                icon: 'wjj',\n                position: {  x: -135, y: 30, z: 0 }\n            }, {\n                name: '生态环境局',\n                icon: 'sthjj',\n                position: {  x: -193, y: 0, z: 0 }\n            }, {\n                name: '监督管理局',\n                icon: 'jdglj',\n                position: {  x: -135, y: -20, z: 0 }\n            }, {\n                name: '公安局',\n                icon: 'gaj',\n                position: {  x: -175, y: -60, z: 0 }\n            }, {\n                name: '交通运输管理局',\n                icon: 'jtysglj',\n                position: {  x: -65, y: -60, z: 0 }\n            }, {\n                name: '省厅数据平台',\n                icon: 'stsjpt',\n                position: {  x: 25, y: -60, z: 0 }\n            }, {\n                name: '文化旅游局',\n                icon: 'whlyj',\n                position: {  x: 90, y: 30, z: 0 }\n            }, {\n                name: '自建设备',\n                icon: 'zjsb',\n                position: {  x: 150, y: 50, z: 0 }\n            }, {\n                name: '市数据平台',\n                icon: 'ssjpt',\n                position: {  x: 150, y: 0, z: 0 }\n            }, {\n                name: '景区数据',\n                icon: 'jqsj',\n                position: {  x: 90, y: -20, z: 0 }\n            }, {\n                name: '网络数据',\n                icon: 'wlsj',\n                position: {  x: 120, y: -60, z: 0 }\n            }],\n            columnList: ['异常', '正常', '今日接入条数', '今日共享条数', '共享数据单位', '共享数据部类'],\n            mainGroup: new THREE.Group(),\n        };\n    },\n    methods: {\n        initWebGL() {\n            const { scene, camera, renderer } = this.initBasics(this.$refs.canvas, {\n                position: { x: 0, y: 0, z: 0 }, antialias: true\n            }, {\n                clearColor: 0x000000,\n                shadowEnabled: true,\n            });\n            this.scene = scene;\n            this.camera = camera;\n            this.renderer = renderer;\n            this.scene.add(this.mainGroup);\n            this.mainGroup.position.x = -10;\n\n            this.resetCameraPosition();\n\n            // this.addAxes(250);\n            // const stats = this.initStats(this.$refs.stats);\n\n            // const control = this.addControl();\n            // const clock = new THREE.Clock();\n\n            this.addCenter();\n            this.addColumn();\n            this.addSection();\n            this.drawLine();\n            this.addBackground();\n\n            const renderScene = () => {\n                // stats.update();\n                TWEEN.update();\n                // const delta = clock.getDelta();\n                // control.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene, camera);\n            };\n            renderScene();\n        },\n        addSection() {\n            const sectionGroup = new THREE.Group();\n            this.sectionList.forEach((sec) => {\n                const gp = new THREE.Group();\n                const { name, icon, position } = sec;\n                const { x, y, z } = position;\n                const texture = this.loadTexture(`img/${icon}.png`);\n                const mat = new THREE.SpriteMaterial({ map: texture });\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(45, 45, 1);\n                gp.add(sprite);\n                const tp = { textColor: '#DCDCDC', scale: 35 };\n                const text = this.textSprite(name, tp);\n                text.position.y = -18;\n                gp.add(text);\n                gp.position.set(x, y, z);\n                sectionGroup.add(gp);\n            });\n            this.mainGroup.add(sectionGroup);\n        },\n        addColumn() {\n            const columnGroup = new THREE.Group();\n            const num = this.columnList.length;\n            const distance = 23;\n            const start = -69;\n            const s = 20;\n            let d = 0;\n            const redT = this.loadTexture('img/red@3x.png');\n            const redMat = new THREE.SpriteMaterial({ map: redT });\n            const greenT = this.loadTexture('img/green@3x.png');\n            const greenMat = new THREE.SpriteMaterial({ map: greenT });\n            const blueT = this.loadTexture('img/blue@3x.png');\n            const blueMat = new THREE.SpriteMaterial({ map: blueT });\n            const bgT = this.loadTexture('img/bluegreen@2x.png');\n            const bgMat = new THREE.SpriteMaterial({ map: bgT });\n            const matArr = [redMat, greenMat, blueMat, blueMat, bgMat, bgMat];\n            for (let i = 0; i < num; i++) {\n                const g = new THREE.Group();\n                const sprite = new THREE.Sprite(matArr[i]);\n                sprite.scale.set(s * 2, s, s);\n                g.add(sprite);\n                if (i > 1) d = 4;\n                if (i > 3) d = 8;\n                const name = this.textSprite(this.columnList[i], { textColor: '#DCDCDC', scale: 30 });\n                name.position.y = -2.3;\n                g.add(name);\n                const y = start + i * distance + d;\n                g.position.set(195, y, 0);\n                columnGroup.add(g);\n            }\n            this.scene.add(columnGroup);\n        },\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Share.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Share.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Share.vue?vue&type=template&id=f5ceab34&\"\nimport script from \"./Share.vue?vue&type=script&lang=js&\"\nexport * from \"./Share.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}