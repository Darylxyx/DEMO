{"version":3,"sources":["webpack:///./src/views/Visual.vue?fa2d","webpack:///./src/mixins/Visual/drawLine.js","webpack:///./src/mixins/Visual/center.js","webpack:///src/views/Visual.vue","webpack:///./src/views/Visual.vue?6334","webpack:///./src/views/Visual.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","id","staticRenderFns","random","Math","round","lineArr","start","x","y","end","shift","line2Arr","mid","drawLine","methods","_this","colorList","hex","type","opacityList","BezierList","forEach","item","i","pointList","interpolation","color","length","opacity","Bezier","initBezier","transparent","push","lineGroup","add","interBottomRadian","d","pointList2","Bezier2","addLineAnim","z","midP","countMid","leftP","rightP","p1","p2","m","vectorNumMultiply","vectorAdd","v","calcVector","sv","vectorProduct","point","radianP","v3","data","bList","yList","yellowPointsGeom","THREE","Geometry","bluePointsGeom","blueEndGeom","yellowEndGeom","brgb","r","g","b","yrgb","vertices","geom","fromBufferGeometry","geometry","mergeVertices","concat","bluePoints","addPoints","yellowPoints","blueEnd","yellowEnd","vList","index","I","animList","assign_default","points","obj","duration","delay","prev","tween","TWEEN","Tween","to","onUpdate","o","verticesNeedUpdate","firstAnim","lastAnim","onComplete","timer","window","setTimeout","clearTimeout","a","next","chain","center","addCenter","centerGroup","Group","spriteArr","texture","loadTexture","mat","SpriteMaterial","map","sprite","Sprite","scale","set","position","bindCenterAnim","t1","t2","line","bindCenterLineAnim","mainGroup","yoyo","repeat","Infinity","easing","Easing","Sinusoidal","InOut","PI","cos","sin","floor","Visualvue_type_script_lang_js_THREE","Visualvue_type_script_lang_js_TWEEN","Visualvue_type_script_lang_js_","mixins","threeMixin","math","common","themeList","businessList","specialList","columnList","initWebGL","_this$initBasics","initBasics","$refs","canvas","antialias","clearColor","shadowEnabled","scene","camera","renderer","resetCameraPosition","addTheme","addBusiness","addSpecial","addColumn","addBackground","renderScene","update","requestAnimationFrame","themeGroup","num","distance","s","textParam","textColor","_text","textSprite","ringGroup","rt","rm","ring","text","specialGroup","_text2","businessGroup","_text3","columnGroup","redT","redMat","greenT","greenMat","blueT","blueMat","matArr","name","views_Visualvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"uHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,aAAwB,CAAAF,EAAA,OAAYG,IAAA,UAAYH,EAAA,OAAYG,IAAA,SAAAC,MAAA,CAAoBC,GAAA,qBAC1LC,EAAA,4DCDQC,EAAkBC,KAAlBD,OAAQE,EAAUD,KAAVC,MAGVC,EAAU,CAAC,CACbC,MAAO,CAAEC,GAAI,IAAKC,GAAI,IACtBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,IACnBE,MAAO,IACR,CACCJ,MAAO,CAAEC,GAAI,IAAKC,GAAI,IACtBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,GACnBE,MAAO,IACR,CACCJ,MAAO,CAAEC,GAAI,IAAKC,EAAG,KACrBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,IACnBE,MAAO,IACR,CACCJ,MAAO,CAAEC,GAAI,IAAKC,EAAG,IACrBC,IAAK,CAAEF,GAAI,GAAIC,EAAG,GAClBE,OAAQ,IACT,CACCJ,MAAO,CAAEC,GAAI,IAAKC,EAAG,IACrBC,IAAK,CAAEF,GAAI,GAAIC,EAAG,GAClBE,OAAQ,IACT,CACCJ,MAAO,CAAEC,GAAI,IAAKC,GAAI,IACtBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,GACnBE,MAAO,IACR,CACCJ,MAAO,CAAEC,GAAI,IAAKC,EAAG,GACrBC,IAAK,CAAEF,GAAI,GAAIC,EAAG,IAClBE,OAAQ,IACT,CACCJ,MAAO,CAAEC,GAAI,IAAKC,EAAG,IACrBC,IAAK,CAAEF,GAAI,GAAIC,EAAG,GAClBE,OAAQ,IACT,CACCJ,MAAO,CAAEC,EAAG,IAAKC,EAAG,IACpBC,IAAK,CAAEF,EAAG,GAAIC,EAAG,IACjBE,MAAO,IACR,CACCJ,MAAO,CAAEC,EAAG,IAAKC,EAAG,GACpBC,IAAK,CAAEF,EAAG,GAAIC,EAAG,GACjBE,MAAO,IACR,CACCJ,MAAO,CAAEC,EAAG,IAAKC,GAAI,IACrBC,IAAK,CAAEF,EAAG,GAAIC,GAAI,IAClBE,OAAQ,IACT,CACCJ,MAAO,CAAEC,EAAG,EAAGC,GAAI,MACnBC,IAAK,CAAEF,EAAG,EAAGC,GAAI,IACjBE,MAAO,IAILC,EAAW,CAAC,CACdL,MAAO,CAAEC,GAAI,IAAKC,GAAI,MACtBI,IAAK,CAAEL,GAAI,GAAIC,GAAI,IACnBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,KACpB,CACCF,MAAO,CAAEC,GAAI,IAAKC,GAAI,MACtBI,IAAK,CAAEL,GAAI,GAAIC,GAAI,IACnBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,KACpB,CACCF,MAAO,CAAEC,GAAI,IAAKC,GAAI,MACtBI,IAAK,CAAEL,GAAI,GAAIC,GAAI,IACnBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,KACpB,CACCF,MAAO,CAAEC,GAAI,GAAIC,GAAI,MACrBI,IAAK,CAAEL,GAAI,GAAIC,GAAI,IACnBC,IAAK,CAAEF,GAAI,GAAIC,GAAI,KACpB,CACCF,MAAO,CAAEC,GAAI,GAAIC,GAAI,MACrBI,IAAK,CAAEL,GAAI,EAAGC,GAAI,IAClBC,IAAK,CAAEF,GAAI,EAAGC,GAAI,KACnB,CACCF,MAAO,CAAEC,GAAI,GAAIC,GAAI,MACrBI,IAAK,CAAEL,GAAI,EAAGC,GAAI,IAClBC,IAAK,CAAEF,GAAI,EAAGC,GAAI,KACnB,CACCF,MAAO,CAAEC,EAAG,GAAIC,GAAI,MACpBI,IAAK,CAAEL,EAAG,EAAGC,GAAI,IACjBC,IAAK,CAAEF,EAAG,EAAGC,GAAI,KAClB,CACCF,MAAO,CAAEC,EAAG,GAAIC,GAAI,MACpBI,IAAK,CAAEL,EAAG,EAAGC,GAAI,IACjBC,IAAK,CAAEF,EAAG,EAAGC,GAAI,KAClB,CACCF,MAAO,CAAEC,EAAG,GAAIC,GAAI,MACpBI,IAAK,CAAEL,EAAG,GAAIC,GAAI,IAClBC,IAAK,CAAEF,EAAG,GAAIC,GAAI,KACnB,CACCF,MAAO,CAAEC,EAAG,IAAKC,GAAI,MACrBI,IAAK,CAAEL,EAAG,GAAIC,GAAI,IAClBC,IAAK,CAAEF,EAAG,GAAIC,GAAI,KACnB,CACCF,MAAO,CAAEC,EAAG,IAAKC,GAAI,MACrBI,IAAK,CAAEL,EAAG,GAAIC,GAAI,IAClBC,IAAK,CAAEF,EAAG,GAAIC,GAAI,KACnB,CACCF,MAAO,CAAEC,EAAG,IAAKC,GAAI,MACrBI,IAAK,CAAEL,EAAG,GAAIC,GAAI,IAClBC,IAAK,CAAEF,EAAG,GAAIC,GAAI,MAGPK,EAAA,CACXC,QAAS,CACLD,SADK,WACM,IAAAE,EAAAvB,KACDwB,EAAY,CAAC,CACfC,IAAK,QACLC,KAAM,QACP,CACCD,IAAK,SACLC,KAAM,WAEJC,EAAc,CAAC,GAAK,IACpBC,EAAa,GAEnBf,EAAQgB,QAAQ,SAACC,EAAMC,GACnB,IAAMC,EAAYT,EAAKU,cAAcH,EAAKhB,MAAOgB,EAAKb,IAAKa,EAAKZ,OAC1DgB,EAAQV,EAAUZ,EAAMF,KAAYc,EAAUW,OAAS,KACvDC,EAAUT,EAAYf,EAAMF,KAAYiB,EAAYQ,OAAS,KAC7DE,EAASd,EAAKe,WAAWN,EAAW,CACtCE,MAAOA,EAAMT,IACbc,aAAa,EACbH,YAEJR,EAAWY,KAAK,CACZH,OAAQ,CAACA,GACTH,MAAOA,EAAMR,OAEjBH,EAAKkB,UAAUC,IAAIL,KAGvBlB,EAASU,QAAQ,SAACC,EAAMC,GACpB,IAAMC,EAAYT,EAAKoB,kBAAkBb,EAAMC,GACzCG,EAAQV,EAAUZ,EAAMF,KAAYc,EAAUW,OAAS,KACvDC,EAAUT,EAAYf,EAAMF,KAAYiB,EAAYQ,OAAS,KAE7DE,EAASd,EAAKe,WAAWN,EAAW,CACtCE,MAAOA,EAAMT,IACbc,aAAa,EACbH,YAEJb,EAAKkB,UAAUC,IAAIL,GAEnB,IAAMO,EAAgB,GAAXb,EAAI,KACTc,EAAatB,EAAKU,cAAcH,EAAKV,IAAKU,EAAKb,IAAK2B,GACpDE,EAAUvB,EAAKe,WAAWO,EAAY,CACxCX,MAAOA,EAAMT,IACbc,aAAa,EACbH,WACD,IACHR,EAAWY,KAAK,CACZH,OAAQ,CAACA,EAAQS,GACjBZ,MAAOA,EAAMR,OAEjBH,EAAKkB,UAAUC,IAAII,KAIvB9C,KAAK+C,YAAYnB,IAErBK,cAzDK,SAyDSnB,EAAOG,EAAKC,GACtBJ,EAAMkC,EAAI,EACV/B,EAAI+B,EAAI,EACR,IAAMC,EAAOjD,KAAKkD,SAASpC,EAAOG,EAAKC,GACjCiC,EAAQnD,KAAKkD,SAASpC,EAAOmC,EAAc,GAAR/B,GACnCkC,EAASpD,KAAKkD,SAASD,EAAMhC,EAAa,GAARC,GACxC,MAAO,CAACJ,EAAOqC,EAAOC,EAAQnC,IAElCiC,SAjEK,SAiEIG,EAAIC,EAAIpC,GACb,IAAMqC,EAAIvD,KAAKwD,kBAAkBxD,KAAKyD,UAAUJ,EAAIC,GAAK,IACnDI,EAAI1D,KAAK2D,WAAWN,EAAIC,GACxBM,EAAK5D,KAAK6D,cAAcH,EAAG,CAAE3C,EAAG,EAAGC,EAAG,EAAGgC,GAAI,IAAK,GAClDc,EAAQ9D,KAAKyD,UAAUF,EAAGvD,KAAKwD,kBAAkBI,EAAI1C,IAC3D,OAAO4C,GAEXnB,kBAxEK,SAwEab,EAAMC,GACpBD,EAAKhB,MAAMkC,EAAI,EACflB,EAAKV,IAAI4B,EAAI,EACb,IAAMJ,IAAOb,EAAI,KAAO,EAAK,GACvBgC,EAAU/D,KAAKgE,GAAGlC,EAAKhB,MAAMC,EAAI6B,EAAGd,EAAKV,IAAIJ,EAAI,EAAG,GAC1D,MAAO,CAACc,EAAKhB,MAAOiD,EAASA,EAASjC,EAAKV,MAE/C2B,YA/EK,SA+EOkB,GAER,IAAMC,EAAQ,GACRC,EAAQ,GAERC,EAAmB,IAAIC,MAAMC,SAC7BC,EAAiB,IAAIF,MAAMC,SAE3BE,EAAc,IAAIH,MAAMC,SACxBG,EAAgB,IAAIJ,MAAMC,SAE1BI,EAAO,CAAEC,EAAG,GAAIC,EAAG,IAAKC,EAAG,KAC3BC,EAAO,CAAEH,EAAG,IAAKC,EAAG,IAAKC,EAAG,IAClCZ,EAAKpC,QAAQ,SAACC,GACV,IAAIiD,EAAW,GACfjD,EAAKO,OAAOR,QAAQ,SAACgD,EAAG9C,GACpB,IAAMiD,GAAO,IAAIX,MAAMC,UAAWW,mBAAmBJ,EAAEK,UAEvD,GADAF,EAAKG,gBACK,IAANpD,EACA,OAAQD,EAAKI,OACT,IAAK,OACDqC,EAAeQ,SAASvC,KAAKwC,EAAKD,SAAS,IAC3C,MACJ,IAAK,SACDX,EAAiBW,SAASvC,KAAKwC,EAAKD,SAAS,IAC7C,MACJ,QACI,MAGZ,GAAIhD,IAAMD,EAAKO,OAAOF,OAAS,EAC1B,OAAQL,EAAKI,OACV,IAAK,OACDsC,EAAYO,SAASvC,KAAKwC,EAAKD,SAASC,EAAKD,SAAS5C,OAAS,IAC/D,MACJ,IAAK,SACDsC,EAAcM,SAASvC,KAAKwC,EAAKD,SAASC,EAAKD,SAAS5C,OAAS,IACjE,MACJ,QACI,MAGZ4C,EAAWA,EAASK,OAAOJ,EAAKD,YAEjB,SAAfjD,EAAKI,MACLgC,EAAM1B,KAAKuC,GACW,WAAfjD,EAAKI,OACZiC,EAAM3B,KAAKuC,KAGnB,IAAMM,EAAarF,KAAKsF,UAAUf,EAAgBG,GAC5Ca,EAAevF,KAAKsF,UAAUlB,EAAkBU,GAChDU,EAAUxF,KAAKsF,UAAUd,EAAaE,EAAM,GAC5Ce,EAAYzF,KAAKsF,UAAUb,EAAeK,EAAM,GAEtD,CAACZ,EAAOC,GAAOtC,QAAQ,SAAC6D,EAAOC,GAC3BD,EAAM7D,QAAQ,SAACC,EAAM8D,GACjB,IAAMC,EAAW,GACX/E,EAAQgF,IAAc,GAAIhE,EAAK,IAC/BiE,EAAmB,IAAVJ,EAAcN,EAAaE,EACpCS,EAAMD,EAAOb,SAASH,SAASa,GAC/BK,EAAsB,GAAXvF,IAAgB,IAC3BwF,EAAmB,IAAXxF,IACdoB,EAAKD,QAAQ,SAAC6B,EAAG3B,GACb,IAAMoE,EAAOrE,EAAKC,EAAI,GACtB,KAAKoE,GAAQzC,EAAE3C,IAAMoF,EAAKpF,GAAK2C,EAAE1C,IAAMmF,EAAKnF,GAAY,IAANe,GAAlD,CAFmB,IAGXhB,EAAY2C,EAAZ3C,EAAGC,EAAS0C,EAAT1C,EAAGgC,EAAMU,EAANV,EACRoD,EAAQ,IAAIC,MAAMC,MAAMN,GACzBO,GAAG,CAAExF,IAAGC,IAAGgC,KAAKiD,GAChBO,SAAS,SAACC,GACPV,EAAOb,SAASwB,oBAAqB,IAE7Cb,EAASrD,KAAK4D,MAGlB,IAAMO,EAAYd,EAAS,GACrBe,EAAWf,EAASA,EAAS1D,OAAS,GAC5CyE,EAASC,WAAW,WAChBd,EAAOb,SAASwB,oBAAqB,EACrCV,EAAIhD,GAAK,IACT,IAAM8D,EAAQC,OAAOC,WAAW,WAC5BD,OAAOE,aAAaH,GACpBf,EAAOb,SAASwB,oBAAqB,EACrCV,EAAIjF,EAAID,EAAMC,EACdiF,EAAIhF,EAAIF,EAAME,EACdgF,EAAIhD,EAAIlC,EAAMkC,EACd2D,EAAU7F,SACXoF,KAGPL,EAAShE,QAAQ,SAACqF,EAAGnF,GACjB,GAAIA,IAAM8D,EAAS1D,OAAS,EAA5B,CAGA,IAAMgF,EAAOtB,EAAS9D,EAAE,GACxBmF,EAAEE,MAAMD,MAEZR,EAAU7F,YAGlBd,KAAKyC,UAAUC,IAAI2C,GACnBrF,KAAKyC,UAAUC,IAAI6C,GACnBvF,KAAKyC,UAAUC,IAAI8C,GACnBxF,KAAKyC,UAAUC,IAAI+C,MC/RhB4B,aAAA,CACX/F,QAAS,CACLgG,UADK,WAID,IAHQ,IAAA/F,EAAAvB,KACFuH,EAAc,IAAIlD,MAAMmD,MACxBC,EAAY,GACT1F,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAM2F,EAAU1H,KAAK2H,YAAL,cAAAvC,OAA+BrD,EAAE,EAAjC,SACV6F,EAAM,IAAIvD,MAAMwD,eAAe,CAAEC,IAAKJ,IACtCK,EAAS,IAAI1D,MAAM2D,OAAOJ,GAChCH,EAAUjF,KAAKuF,GACfR,EAAY7E,IAAIqF,GAGpBN,EAAU,GAAGQ,MAAMC,IAAI,GAAG,GAAG,IAE7BT,EAAU,GAAGQ,MAAMC,IAAI,GAAG,GAAG,IAC7BT,EAAU,GAAGU,SAASD,KAAK,GAAI,GAAI,GACnClI,KAAKoI,eAAeX,EAAU,IAE9BA,EAAU,GAAGQ,MAAMC,IAAI,GAAG,GAAG,IAC7BT,EAAU,GAAGU,SAASD,KAAK,IAAK,GAAI,GACpC,IAAMG,EAAKtB,OAAOC,WAAW,WACzBD,OAAOE,aAAaoB,GACpB9G,EAAK6G,eAAeX,EAAU,KAC/B,KAEHA,EAAU,GAAGQ,MAAMC,IAAI,GAAG,GAAG,IAC7BT,EAAU,GAAGU,SAASD,IAAI,GAAI,EAAG,GACjC,IAAMI,EAAKvB,OAAOC,WAAW,WACzBD,OAAOE,aAAaqB,GACpB/G,EAAK6G,eAAeX,EAAU,KAC/B,KACHF,EAAYY,SAASnH,EAAI,GAKzB,IAFA,IAAM0G,EAAU1H,KAAK2H,YAAY,iBAC3BC,EAAM,IAAIvD,MAAMwD,eAAe,CAAEC,IAAKJ,EAASnF,aAAa,IACzDR,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMwG,EAAO,IAAIlE,MAAM2D,OAAOJ,GAE9B,OADAW,EAAKN,MAAMC,IAAI,GAAI,GAAG,GACdnG,GACJ,KAAK,EACDwG,EAAKJ,SAASD,KAAK,IAAK,GAAI,GAC5B,MACJ,KAAK,EACDK,EAAKJ,SAASD,IAAI,GAAI,GAAI,GAC1B,MACJ,KAAK,EACDK,EAAKJ,SAASD,IAAI,GAAI,GAAI,GAC1B,MACJ,QACI,MAERlI,KAAKwI,mBAAmBD,GACxBhB,EAAY7E,IAAI6F,GAEpBvI,KAAKyI,UAAU/F,IAAI6E,IAEvBa,eAzDK,SAyDUpC,GACX,IAAML,EAAQK,EAAImC,SAASnH,EACrBkG,EAAI,CAAElG,EAAG2E,GACTM,EAAW,IAEXG,GADQzF,KAAKD,SACL,IAAI2F,MAAMC,MAAMY,GACzBX,GAAG,CAAEvF,EAAG2E,EAAQ,GAAKM,GACrBO,SAAS,SAACC,GACPT,EAAImC,SAASnH,EAAIyF,EAAEzF,IAEtB0H,MAAK,GACLC,OAAOC,KACPC,OAAOxC,MAAMyC,OAAOC,WAAWC,QACpC5C,EAAMtF,SAEV0H,mBAxEK,SAwEcxC,GACf,IAAMkB,EAAI,CAAElG,GAAI,IACViF,EAA2B,IAAhBtF,KAAKD,SAAkB,IAClCwF,EAAwB,IAAhBvF,KAAKD,SACb0F,EAAQ,IAAIC,MAAMC,MAAMY,GACzBX,GAAG,CAAEvF,EAAG,IAAMiF,GACdO,SAAS,SAACC,GACPT,EAAImC,SAASnH,EAAIyF,EAAEzF,IAEtBkF,MAAMA,GACNyC,OAAOC,KACZxC,EAAMtF,eCrElBH,KAAAsI,GAAAtI,KAAAuI,IAAAvI,KAAAwI,IAAAxI,KAAAyI,MACArC,QAAAsC,IAAAhF,MAAAiF,IAAAjD,MACAkD,EAAA,CACAC,OAAA,CAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAtI,EAAAgG,GACApD,KAFA,WAGA,OACA2F,UAAA,yFACAC,aAAA,gHACAC,YAAA,wBACAC,WAAA,kDACAtB,UAAA,IAAAY,EAAA7B,MACA/E,UAAA,IAAA4G,EAAA7B,QAGAlG,QAAA,CACA0I,UADA,WACA,IAAAC,EACAjK,KAAAkK,WAAAlK,KAAAmK,MAAAC,OAAA,CACAjC,SAAA,CAAApH,EAAA,EAAAC,EAAA,EAAAgC,EAAA,GAAAqH,WAAA,GACA,CACAC,WAAA,EACAC,eAAA,IAJAC,EADAP,EACAO,MAAAC,EADAR,EACAQ,OAAAC,EADAT,EACAS,SAMA1K,KAAAwK,QACAxK,KAAAyK,SACAzK,KAAA0K,WACA1K,KAAAwK,MAAA9H,IAAA1C,KAAAyI,WACAzI,KAAAyI,UAAA/F,IAAA1C,KAAAyC,WACAzC,KAAAyI,UAAAN,SAAApH,GAAA,GAEAf,KAAA2K,sBASA3K,KAAAsH,YACAtH,KAAA4K,WACA5K,KAAA6K,cACA7K,KAAA8K,aACA9K,KAAA+K,YACA/K,KAAAqB,WACArB,KAAAgL,gBAEA,IAAAC,EAAA,SAAAA,IAEA3B,EAAA4B,SAGAC,sBAAAF,GACAP,EAAA5K,OAAA0K,EAAAC,IAEAQ,KAEAL,SA1CA,WAuDA,IAZA,IAAAQ,EAAA,IAAA/B,EAAA7B,MACA6D,EAAArL,KAAA4J,UAAAzH,OACAmJ,EAAA,GACAxK,EAAA,GAAAwK,EAAA,GACAvK,GAAA,IACAwK,EAAA,GACA7D,EAAA1H,KAAA2H,YAAA,oBACAC,EAAA,IAAAyB,EAAAxB,eAAA,CAAAC,IAAAJ,IACA8D,EAAA,CACAC,UAAA,UACAxD,MAAA,IAEAlG,EAAA,EAAAA,EAAAsJ,EAAAtJ,IAAA,CACA,IAAA6C,EAAA,IAAAyE,EAAA7B,MACAO,EAAA,IAAAsB,EAAArB,OAAAJ,GACAG,EAAAE,MAAAC,IAAAqD,OACA,IAAAG,EAAA1L,KAAA2L,WAAA3L,KAAA4J,UAAA7H,GAAAyJ,GACAE,EAAAvD,SAAAnH,GAAA,GACA,IAAAA,OAAA,EACAe,EAAA,GACAjB,GAAA,GACAwK,EAAA,GACAvK,GAAA,IACAC,EAAAF,GAAAiB,EAAA,GAAAuJ,GAEAtK,EAAAF,EAAAiB,EAAAuJ,EAEA1G,EAAAlC,IAAAqF,GACAnD,EAAAlC,IAAAgJ,GACA9G,EAAAuD,SAAAD,IAAAnH,EAAAC,EAAA,GACAoK,EAAA1I,IAAAkC,GAEA5E,KAAAyI,UAAA/F,IAAA0I,GAGA,IAAAQ,EAAA,IAAAvC,EAAA7B,MACAqE,EAAA7L,KAAA2H,YAAA,kBACAmE,EAAA,IAAAzC,EAAAxB,eAAA,CAAAC,IAAA+D,IACAE,EAAA,IAAA1C,EAAArB,OAAA8D,GACAC,EAAA5D,SAAAnF,EAAA,EACA+I,EAAA9D,MAAAC,IAAA,SACA0D,EAAAlJ,IAAAqJ,GACA,IAAAC,EAAAhM,KAAA2L,WAAA,UACAF,UAAA,UACAxD,MAAA,KAEA+D,EAAA7D,SAAAD,IAAA,QACA0D,EAAAlJ,IAAAsJ,GACAJ,EAAAzD,SAAAD,KAAA,QACAlI,KAAAyI,UAAA/F,IAAAkJ,IAEAd,WA9FA,WA0GA,IAXA,IAAAmB,EAAA,IAAA5C,EAAA7B,MACA6D,EAAArL,KAAA8J,YAAA3H,OACAmJ,EAAA,GACAxK,EAAAH,KAAAyI,MAAAiC,EAAA,IAAAC,EAAA,EACAC,EAAA,GACA7D,EAAA1H,KAAA2H,YAAA,sBACAC,EAAA,IAAAyB,EAAAxB,eAAA,CAAAC,IAAAJ,IACA8D,EAAA,CACAC,UAAA,UACAxD,MAAA,IAEAlG,EAAA,EAAAA,EAAAsJ,EAAAtJ,IAAA,CACA,IAAA6C,EAAA,IAAAyE,EAAA7B,MACAO,EAAA,IAAAsB,EAAArB,OAAAJ,GACAG,EAAAE,MAAAC,IAAAqD,OACA,IAAAW,EAAAlM,KAAA2L,WAAA3L,KAAA8J,YAAA/H,GAAAyJ,GACAU,EAAA/D,SAAAnH,GAAA,GACA,IAAAA,EAAAF,EAAAiB,EAAAuJ,EACA1G,EAAAlC,IAAAqF,GACAnD,EAAAlC,IAAAwJ,GACAtH,EAAAuD,SAAAD,IAAA,IAAAlH,EAAA,GACAiL,EAAAvJ,IAAAkC,GAEA5E,KAAAyI,UAAA/F,IAAAuJ,GAGA,IAAAL,EAAA,IAAAvC,EAAA7B,MACAqE,EAAA7L,KAAA2H,YAAA,kBACAmE,EAAA,IAAAzC,EAAAxB,eAAA,CAAAC,IAAA+D,IACAE,EAAA,IAAA1C,EAAArB,OAAA8D,GACAC,EAAA5D,SAAAnF,EAAA,EACA+I,EAAA9D,MAAAC,IAAA,SACA0D,EAAAlJ,IAAAqJ,GACA,IAAAC,EAAAhM,KAAA2L,WAAA,QACAF,UAAA,UACAxD,MAAA,KAEA+D,EAAA7D,SAAAD,KAAA,UACA0D,EAAAlJ,IAAAsJ,GACAJ,EAAAzD,SAAAD,IAAA,QACAlI,KAAAyI,UAAA/F,IAAAkJ,IAEAf,YAzIA,WAqJA,IAXA,IAAAsB,EAAA,IAAA9C,EAAA7B,MACA6D,EAAArL,KAAA6J,aAAA1H,OACAmJ,EAAA,GACAxK,EAAAH,KAAAyI,MAAAiC,EAAA,IAAAC,EACAC,EAAA,GACA7D,EAAA1H,KAAA2H,YAAA,uBACAC,EAAA,IAAAyB,EAAAxB,eAAA,CAAAC,IAAAJ,IACA8D,EAAA,CACAC,UAAA,UACAxD,MAAA,IAEAlG,EAAA,EAAAA,EAAAsJ,EAAAtJ,IAAA,CACA,IAAA6C,EAAA,IAAAyE,EAAA7B,MACAO,EAAA,IAAAsB,EAAArB,OAAAJ,GACAG,EAAAE,MAAAC,IAAAqD,OACA,IAAAa,EAAApM,KAAA2L,WAAA3L,KAAA6J,aAAA9H,GAAAyJ,GACAY,EAAAjE,SAAAnH,EAAA,EACA4D,EAAAlC,IAAAqF,GACAnD,EAAAlC,IAAA0J,GACA,IAAArL,EAAAD,EAAAiB,EAAAuJ,EACA1G,EAAAuD,SAAAD,IAAAnH,GAAA,MACAoL,EAAAzJ,IAAAkC,GAEA5E,KAAAyI,UAAA/F,IAAAyJ,GAGA,IAAAP,EAAA,IAAAvC,EAAA7B,MACAqE,EAAA7L,KAAA2H,YAAA,kBACAmE,EAAA,IAAAzC,EAAAxB,eAAA,CAAAC,IAAA+D,IACAE,EAAA,IAAA1C,EAAArB,OAAA8D,GACAC,EAAA5D,SAAAnF,EAAA,EACA+I,EAAA9D,MAAAC,IAAA,SACA0D,EAAAlJ,IAAAqJ,GACA,IAAAC,EAAAhM,KAAA2L,WAAA,SACAF,UAAA,UACAxD,MAAA,KAEA+D,EAAA7D,SAAAnF,EAAA,GACA4I,EAAAlJ,IAAAsJ,GACAJ,EAAAzD,SAAAD,IAAA,SACAlI,KAAAyI,UAAA/F,IAAAkJ,IAEAb,UApLA,WAkMA,IAbA,IAAAsB,EAAA,IAAAhD,EAAA7B,MACA6D,EAAArL,KAAA+J,WAAA5H,OACAmJ,EAAA,GACAxK,GAAA,GACAyK,EAAA,GACA3I,EAAA,EACA0J,EAAAtM,KAAA2H,YAAA,kBACA4E,EAAA,IAAAlD,EAAAxB,eAAA,CAAAC,IAAAwE,IACAE,EAAAxM,KAAA2H,YAAA,oBACA8E,EAAA,IAAApD,EAAAxB,eAAA,CAAAC,IAAA0E,IACAE,EAAA1M,KAAA2H,YAAA,mBACAgF,EAAA,IAAAtD,EAAAxB,eAAA,CAAAC,IAAA4E,IACAE,EAAA,CAAAL,EAAAI,IAAAF,OACA1K,EAAA,EAAAA,EAAAsJ,EAAAtJ,IAAA,CACA,IAAA6C,EAAA,IAAAyE,EAAA7B,MACAO,EAAA,IAAAsB,EAAArB,OAAA4E,EAAA7K,IACAgG,EAAAE,MAAAC,IAAA,EAAAqD,OACA3G,EAAAlC,IAAAqF,GACAhG,EAAA,IAAAa,EAAA,GACA,IAAAiK,EAAA7M,KAAA2L,WAAA3L,KAAA+J,WAAAhI,GAAA,CAAA0J,UAAA,UAAAxD,MAAA,KACA4E,EAAA1E,SAAAnH,GAAA,IACA4D,EAAAlC,IAAAmK,GACA,IAAA7L,EAAAF,EAAAiB,EAAAuJ,EAAA1I,EACAgC,EAAAuD,SAAAD,IAAA,IAAAlH,EAAA,GACAqL,EAAA3J,IAAAkC,GAEA5E,KAAAwK,MAAA9H,IAAA2J,MC5OgVS,EAAA,cCOhVC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACAhN,EACAW,GACF,EACA,KACA,KACA,MAIeyM,EAAA,WAAAH","file":"js/chunk-2d21e3a8.b37a9d67.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{ref:\"stats\"}),_c('div',{ref:\"canvas\",attrs:{\"id\":\"WebGL-output\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const { random, round } = Math;\n\n// 两侧线\nconst lineArr = [{\n    start: { x: -187, y: -49 },\n    end: { x: -40, y: -15 },\n    shift: 60,\n}, {\n    start: { x: -187, y: -22 },\n    end: { x: -40, y: -9 },\n    shift: 30,\n}, {\n    start: { x: -187, y: 4.5 },\n    end: { x: -40, y: -12 },\n    shift: 20,   \n}, {\n    start: { x: -187, y: 31 },\n    end: { x: -40, y: 9 },\n    shift: -28,   \n}, {\n    start: { x: -187, y: 58 },\n    end: { x: -40, y: 6 },\n    shift: -50,   \n}, {\n    start: { x: -147, y: -28 },\n    end: { x: -40, y: -8 },\n    shift: 35,   \n}, {\n    start: { x: -147, y: 7 },\n    end: { x: -40, y: 10 },\n    shift: -15,   \n}, {\n    start: { x: -147, y: 42 },\n    end: { x: -40, y: 6 },\n    shift: -35,   \n}, {\n    start: { x: 142, y: 33 },\n    end: { x: 40, y: 12 },\n    shift: 40,   \n}, {\n    start: { x: 142, y: 3 },\n    end: { x: 40, y: 9 },\n    shift: 15,   \n}, {\n    start: { x: 142, y: -27 },\n    end: { x: 40, y: -12 },\n    shift: -35,   \n}, {\n    start: { x: 0, y: -56.5 },\n    end: { x: 0, y: -23 },\n    shift: 0,\n}];\n\n// 底部线\nconst line2Arr = [{\n    start: { x: -150, y: -56.5 },\n    mid: { x: -24, y: -47 },\n    end: { x: -24, y: -23 },\n}, {\n    start: { x: -125, y: -56.5 },\n    mid: { x: -20, y: -47 },\n    end: { x: -20, y: -23 },\n}, {\n    start: { x: -100, y: -56.5 },\n    mid: { x: -16, y: -47 },\n    end: { x: -16, y: -23 },\n}, {\n    start: { x: -75, y: -56.5 },\n    mid: { x: -12, y: -47 },\n    end: { x: -12, y: -23 },\n}, {\n    start: { x: -50, y: -56.5 },\n    mid: { x: -8, y: -47 },\n    end: { x: -8, y: -23 },\n}, {\n    start: { x: -25, y: -56.5 },\n    mid: { x: -4, y: -47 },\n    end: { x: -4, y: -23 },\n}, {\n    start: { x: 25, y: -56.5 },\n    mid: { x: 4, y: -47 },\n    end: { x: 4, y: -23 },\n}, {\n    start: { x: 50, y: -56.5 },\n    mid: { x: 8, y: -47 },\n    end: { x: 8, y: -23 },\n}, {\n    start: { x: 75, y: -56.5 },\n    mid: { x: 12, y: -47 },\n    end: { x: 12, y: -23 },\n}, {\n    start: { x: 100, y: -56.5 },\n    mid: { x: 16, y: -47 },\n    end: { x: 16, y: -23 },\n}, {\n    start: { x: 125, y: -56.5 },\n    mid: { x: 20, y: -47 },\n    end: { x: 20, y: -23 },    \n}, {\n    start: { x: 150, y: -56.5 },\n    mid: { x: 24, y: -47 },\n    end: { x: 24, y: -23 },\n}];\n\nexport default {\n    methods: {\n        drawLine() {\n            const colorList = [{\n                hex: 0x1FCBF8,\n                type: 'blue',\n            }, { \n                hex: 0xD9B91C,\n                type: 'yellow',\n            }];\n            const opacityList = [0.6, 0.8];\n            const BezierList = [];\n\n            lineArr.forEach((item, i) => {\n                const pointList = this.interpolation(item.start, item.end, item.shift);\n                const color = colorList[round(random() * (colorList.length - 1))];\n                const opacity = opacityList[round(random() * (opacityList.length - 1))];\n                const Bezier = this.initBezier(pointList, {\n                    color: color.hex,\n                    transparent: true,\n                    opacity,\n                });\n                BezierList.push({\n                    Bezier: [Bezier],\n                    color: color.type,\n                });\n                this.lineGroup.add(Bezier);\n            });\n\n            line2Arr.forEach((item, i) => {\n                const pointList = this.interBottomRadian(item, i);\n                const color = colorList[round(random() * (colorList.length - 1))];\n                const opacity = opacityList[round(random() * (opacityList.length - 1))];\n                // 第一分段\n                const Bezier = this.initBezier(pointList, {\n                    color: color.hex,\n                    transparent: true,\n                    opacity,\n                });\n                this.lineGroup.add(Bezier);\n                // 第二分段\n                const d = (i - 5.5) * 5\n                const pointList2 = this.interpolation(item.mid, item.end, d);\n                const Bezier2 = this.initBezier(pointList2, {\n                    color: color.hex,\n                    transparent: true,\n                    opacity,\n                }, 17);\n                BezierList.push({\n                    Bezier: [Bezier, Bezier2],\n                    color: color.type,\n                });\n                this.lineGroup.add(Bezier2);\n            });\n\n            // 添加线条流动动画\n            this.addLineAnim(BezierList);\n        },\n        interpolation(start, end, shift) { // 样条插值\n            start.z = 0;\n            end.z = 0;\n            const midP = this.countMid(start, end, shift);\n            const leftP = this.countMid(start, midP, shift * 0.2);\n            const rightP = this.countMid(midP, end, shift * 0.2);\n            return [start, leftP, rightP, end];\n        },\n        countMid(p1, p2, shift) { // 计算中点偏移，用于绘制贝赛尔曲线\n            const m = this.vectorNumMultiply(this.vectorAdd(p1, p2), 0.5);\n            const v = this.calcVector(p1, p2);\n            const sv = this.vectorProduct(v, { x: 0, y: 0, z: -1 }, true);\n            const point = this.vectorAdd(m, this.vectorNumMultiply(sv, shift));\n            return point;\n        },\n        interBottomRadian(item, i) {\n            item.start.z = 0;\n            item.mid.z = 0;\n            const d = -((i - 5.5) / 6) * 15;\n            const radianP = this.v3(item.start.x + d, item.mid.y + 1, 0);\n            return [item.start, radianP, radianP, item.mid];\n        },\n        addLineAnim(data) {\n            // 黄色or蓝色路径坐标\n            const bList = [];\n            const yList = [];\n            // 黄色or蓝色运动点云\n            const yellowPointsGeom = new THREE.Geometry();\n            const bluePointsGeom = new THREE.Geometry();\n            // 黄色or蓝色端点点云\n            const blueEndGeom = new THREE.Geometry();\n            const yellowEndGeom = new THREE.Geometry();\n            // 黄色or蓝色rgb值\n            const brgb = { r: 31, g: 203, b: 248 };\n            const yrgb = { r: 217, g: 185, b: 28 };\n            data.forEach((item) => {\n                let vertices = [];\n                item.Bezier.forEach((b, i) => {\n                    const geom = new THREE.Geometry().fromBufferGeometry(b.geometry);\n                    geom.mergeVertices();\n                    if (i === 0) {\n                        switch (item.color) {\n                            case 'blue':\n                                bluePointsGeom.vertices.push(geom.vertices[0]);\n                                break;\n                            case 'yellow':\n                                yellowPointsGeom.vertices.push(geom.vertices[0]);\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    if (i === item.Bezier.length - 1) {\n                         switch (item.color) {\n                            case 'blue':\n                                blueEndGeom.vertices.push(geom.vertices[geom.vertices.length - 1]);\n                                break;\n                            case 'yellow':\n                                yellowEndGeom.vertices.push(geom.vertices[geom.vertices.length - 1]);\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    vertices = vertices.concat(geom.vertices);\n                });\n                if (item.color === 'blue') {\n                    bList.push(vertices);\n                } else if (item.color === 'yellow') {\n                    yList.push(vertices);\n                }\n            });\n            const bluePoints = this.addPoints(bluePointsGeom, brgb);\n            const yellowPoints = this.addPoints(yellowPointsGeom, yrgb);\n            const blueEnd = this.addPoints(blueEndGeom, brgb, 2);\n            const yellowEnd = this.addPoints(yellowEndGeom, yrgb, 2);\n\n            [bList, yList].forEach((vList, index) => {\n                vList.forEach((item, I) => {\n                    const animList = [];\n                    const start = Object.assign({}, item[0]);\n                    const points = index === 0 ? bluePoints : yellowPoints;\n                    const obj = points.geometry.vertices[I];\n                    const duration = random() * 50 + 100;\n                    const delay = random() * 1000;\n                    item.forEach((v, i) => {\n                        const prev = item[i - 1];\n                        if ((prev && v.x === prev.x && v.y === prev.y) || i === 0) return;\n                        const { x, y, z } = v;\n                        const tween = new TWEEN.Tween(obj)\n                            .to({ x, y, z }, duration)\n                            .onUpdate((o) => {\n                                points.geometry.verticesNeedUpdate = true;\n                            });\n                        animList.push(tween);\n                    });\n\n                    const firstAnim = animList[0];\n                    const lastAnim = animList[animList.length - 1];\n                    lastAnim.onComplete(() => {\n                        points.geometry.verticesNeedUpdate = true;\n                        obj.z = -100;\n                        const timer = window.setTimeout(() => {\n                            window.clearTimeout(timer);\n                            points.geometry.verticesNeedUpdate = true;\n                            obj.x = start.x;\n                            obj.y = start.y;\n                            obj.z = start.z;\n                            firstAnim.start();\n                        }, delay);\n                    });\n\n                    animList.forEach((a, i) => {\n                        if (i === animList.length - 1) {\n                            return;\n                        };\n                        const next = animList[i+1];\n                        a.chain(next);\n                    });\n                    firstAnim.start();\n                });\n            });\n            this.lineGroup.add(bluePoints);\n            this.lineGroup.add(yellowPoints);\n            this.lineGroup.add(blueEnd);\n            this.lineGroup.add(yellowEnd);\n        },\n    },\n};","export default {\n    methods: {\n        addCenter() {\n            const centerGroup = new THREE.Group();\n            const spriteArr = [];\n            for (let i = 0; i < 4; i++) {\n                const texture = this.loadTexture(`img/center-${i+1}.png`);\n                const mat = new THREE.SpriteMaterial({ map: texture });\n                const sprite = new THREE.Sprite(mat);\n                spriteArr.push(sprite);\n                centerGroup.add(sprite);\n            }\n            // 主\n            spriteArr[0].scale.set(95,95,95);\n            // 左上\n            spriteArr[1].scale.set(35,35,35);\n            spriteArr[1].position.set(-22, 13, 1);\n            this.bindCenterAnim(spriteArr[1]);\n            // 左下\n            spriteArr[2].scale.set(35,35,35);\n            spriteArr[2].position.set(-23, -14, 1);\n            const t1 = window.setTimeout(() => {\n                window.clearTimeout(t1);\n                this.bindCenterAnim(spriteArr[2]);\n            }, 300);\n            // 右\n            spriteArr[3].scale.set(37,37,37);\n            spriteArr[3].position.set(20, 2, 1);\n            const t2 = window.setTimeout(() => {\n                window.clearTimeout(t2);\n                this.bindCenterAnim(spriteArr[3]);\n            }, 800);\n            centerGroup.position.y = 20;\n\n            // 添加飞线\n            const texture = this.loadTexture('img/line3.png');\n            const mat = new THREE.SpriteMaterial({ map: texture, transparent: true });\n            for (let i = 0; i < 3; i++) {\n                const line = new THREE.Sprite(mat);\n                line.scale.set(0.5,15,1);\n                switch (i) {\n                    case 0:\n                        line.position.set(-10, -15, 0);\n                        break;\n                    case 1:\n                        line.position.set(0, -15, 0);\n                        break;\n                    case 2:\n                        line.position.set(9, -15, 0);\n                        break;\n                    default:\n                        break;\n                }\n                this.bindCenterLineAnim(line);\n                centerGroup.add(line);\n            }\n            this.mainGroup.add(centerGroup);\n        },\n        bindCenterAnim(obj) {\n            const index = obj.position.y;\n            const a = { y: index };\n            const duration = 1000;\n            const delay = Math.random() * 200;\n            const tween = new TWEEN.Tween(a)\n                .to({ y: index + 2 }, duration)\n                .onUpdate((o) => {\n                    obj.position.y = o.y;\n                })\n                .yoyo(true)\n                .repeat(Infinity)\n                .easing(TWEEN.Easing.Sinusoidal.InOut);\n            tween.start();\n        },\n        bindCenterLineAnim(obj) {\n            const a = { y: -15 };\n            const duration = Math.random() * 1000 + 1000;\n            const delay = Math.random() * 1000;\n            const tween = new TWEEN.Tween(a)\n                .to({ y: 90 }, duration)\n                .onUpdate((o) => {\n                    obj.position.y = o.y;\n                })\n                .delay(delay)\n                .repeat(Infinity);\n            tween.start();\n        },\n    },\n};","<template>\n    <div class='container'>\n        <!-- <div v-show='isLoading' class='loading'>Loading...</div> -->\n        <div ref='stats'></div>\n        <div ref='canvas' id='WebGL-output'></div>\n    </div>\n</template>\n\n<script>\nimport math from '../mixins/math.js';\nimport mixin from '../mixins/threeMixin.js';\nimport common from '../mixins/common.js';\nimport drawLine from '../mixins/Visual/drawLine.js';\nimport center from '../mixins/Visual/center.js';\n\nconst { PI, cos, sin, floor } = Math;\nconst { THREE, TWEEN } = window;\nexport default {\n    mixins: [mixin, math, common, drawLine, center],\n    data() {\n        return {\n            themeList: ['旅游停车基础数据', '旅游交通资源数据', '旅游从业人员基础数据', '涉旅企业基础数据', '目的地数据', '涉旅多媒体库', '涉旅硬件基础数据', '旅游商户资源基础数据'],\n            businessList: ['产业实时数据', '游客数据', '票务数据', '旅游项目数据', '旅游咨询数据', '旅游政务数据', '行业监管数据', '产业经营数据', '运营商数据', '新媒体数据', 'OTA数据', '旅游电商数据', '旅游地图数据'],\n            specialList: ['节假日专题', '投诉专题', '舆情专题'],\n            columnList: ['异常调用数', '数据数量', '数据总量', '服务总量访问', '总用户数量', '接入服务总数'],\n            mainGroup: new THREE.Group(),\n            lineGroup: new THREE.Group(),\n        };\n    },\n    methods: {\n        initWebGL() {\n            const { scene, camera, renderer } = this.initBasics(this.$refs.canvas, {\n                position: { x: 0, y: 0, z: 0 }, antialias: true\n            }, {\n                clearColor: 0x000000,\n                shadowEnabled: true,\n            });\n            this.scene = scene;\n            this.camera = camera;\n            this.renderer = renderer;\n            this.scene.add(this.mainGroup);\n            this.mainGroup.add(this.lineGroup);\n            this.mainGroup.position.x = -10;\n\n            this.resetCameraPosition();\n\n            // this.addAxes(250);\n            // const stats = this.initStats(this.$refs.stats);\n\n            // const control = this.addControl();\n            // const clock = new THREE.Clock();\n\n            // this.addLight();\n            this.addCenter();\n            this.addTheme();\n            this.addBusiness();\n            this.addSpecial();\n            this.addColumn();\n            this.drawLine();\n            this.addBackground();\n\n            const renderScene = () => {\n                // stats.update();\n                TWEEN.update();\n                // const delta = clock.getDelta();\n                // control.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene, camera);\n            };\n            renderScene();\n        },\n        addTheme() { // 公共基础主题\n            const themeGroup = new THREE.Group();\n            const num = this.themeList.length;\n            let distance = 27;\n            let start = 2 * (-distance) + 10;\n            let x = -195;\n            const s = 21;\n            const texture = this.loadTexture('img/theme@3x.png');\n            const mat = new THREE.SpriteMaterial({ map: texture });\n            const textParam = {\n                textColor: '#DCDCDC',\n                scale: 30,\n            };\n            for (let i = 0; i < num; i++) {\n                const g = new THREE.Group();\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(s, s, s);\n                const text = this.textSprite(this.themeList[i], textParam);\n                text.position.y = -15;\n                let y;\n                if (i > 4) {\n                    start = -22;\n                    distance = 35;\n                    x = -155;\n                    y = start + (i - 5) * distance;\n                } else {\n                    y = start + i * distance;\n                }\n                g.add(sprite);\n                g.add(text);\n                g.position.set(x, y, 0);\n                themeGroup.add(g);\n            }\n            this.mainGroup.add(themeGroup);\n\n            // 圆环\n            const ringGroup = new THREE.Group();\n            const rt = this.loadTexture('img/ring-1.png');\n            const rm = new THREE.SpriteMaterial({ map: rt });\n            const ring = new THREE.Sprite(rm);\n            ring.position.z = 2;\n            ring.scale.set(35, 15, 1);\n            ringGroup.add(ring);\n            const text = this.textSprite('公共基础主题', {\n                textColor: '#DCDCDC',\n                scale: 35,\n            });\n            text.position.set(5, 0, 23);\n            ringGroup.add(text);\n            ringGroup.position.set(-80, 0, 0);\n            this.mainGroup.add(ringGroup);\n        },\n        addSpecial() { // 公共专题\n            const specialGroup = new THREE.Group();\n            const num = this.specialList.length;\n            const distance = 30;\n            const start = Math.floor(num / 2) * (-distance) + 8;\n            const s = 21;\n            const texture = this.loadTexture('img/special@3x.png');\n            const mat = new THREE.SpriteMaterial({ map: texture });\n            const textParam = {\n                textColor: '#DCDCDC',\n                scale: 30,\n            };\n            for (let i = 0; i < num; i++) {\n                const g = new THREE.Group();\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(s, s, s);\n                const text = this.textSprite(this.specialList[i], textParam);\n                text.position.y = -13;\n                const y = start + i * distance;\n                g.add(sprite);\n                g.add(text);\n                g.position.set(150, y, 0);\n                specialGroup.add(g);\n            }\n            this.mainGroup.add(specialGroup);\n\n            // 圆环\n            const ringGroup = new THREE.Group();\n            const rt = this.loadTexture('img/ring-2.png');\n            const rm = new THREE.SpriteMaterial({ map: rt });\n            const ring = new THREE.Sprite(rm);\n            ring.position.z = 2;\n            ring.scale.set(35, 15, 1);\n            ringGroup.add(ring);\n            const text = this.textSprite('公共专题', {\n                textColor: '#DCDCDC',\n                scale: 35,\n            });\n            text.position.set(-3.5, 0, 23);\n            ringGroup.add(text);\n            ringGroup.position.set(80, 0, 0);\n            this.mainGroup.add(ringGroup);\n        },\n        addBusiness() { // 公共业务库\n            const businessGroup = new THREE.Group();\n            const num = this.businessList.length;\n            const distance = 25;\n            const start = Math.floor(num / 2) * (-distance);\n            const s = 21;\n            const texture = this.loadTexture('img/business@3x.png');\n            const mat = new THREE.SpriteMaterial({ map: texture });\n            const textParam = {\n                textColor: '#DCDCDC',\n                scale: 30,\n            };\n            for (let i = 0; i < num; i++) {\n                const g = new THREE.Group();\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(s, s, s);\n                const text = this.textSprite(this.businessList[i], textParam);\n                text.position.y = 7;\n                g.add(sprite);\n                g.add(text);\n                const x = start + i * distance;\n                g.position.set(x, -67, 0);\n                businessGroup.add(g);\n            }\n            this.mainGroup.add(businessGroup);\n\n            // 圆环\n            const ringGroup = new THREE.Group();\n            const rt = this.loadTexture('img/ring-3.png');\n            const rm = new THREE.SpriteMaterial({ map: rt });\n            const ring = new THREE.Sprite(rm);\n            ring.position.z = 2;\n            ring.scale.set(42, 16, 1);\n            ringGroup.add(ring);\n            const text = this.textSprite('公共业务库', {\n                textColor: '#DCDCDC',\n                scale: 35,\n            });\n            text.position.z = 23;\n            ringGroup.add(text);\n            ringGroup.position.set(0, -35, 0);\n            this.mainGroup.add(ringGroup);\n        },\n        addColumn() {\n            const columnGroup = new THREE.Group();\n            const num = this.columnList.length;\n            const distance = 23;\n            const start = -69;\n            const s = 20;\n            let d = 0;\n            const redT = this.loadTexture('img/red@3x.png');\n            const redMat = new THREE.SpriteMaterial({ map: redT });\n            const greenT = this.loadTexture('img/green@3x.png');\n            const greenMat = new THREE.SpriteMaterial({ map: greenT });\n            const blueT = this.loadTexture('img/blue@3x.png');\n            const blueMat = new THREE.SpriteMaterial({ map: blueT });\n            const matArr = [redMat, blueMat, blueMat, greenMat, greenMat, greenMat];\n            for (let i = 0; i < num; i++) {\n                const g = new THREE.Group();\n                const sprite = new THREE.Sprite(matArr[i]);\n                sprite.scale.set(s * 2, s, s);\n                g.add(sprite);\n                if (i > 2) d = 7;\n                const name = this.textSprite(this.columnList[i], { textColor: '#DCDCDC', scale: 30 });\n                name.position.y = -2.3;\n                g.add(name);\n                const y = start + i * distance + d;\n                g.position.set(195, y, 0);\n                columnGroup.add(g);\n            }\n            this.scene.add(columnGroup);\n        },\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Visual.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Visual.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Visual.vue?vue&type=template&id=112a98bd&\"\nimport script from \"./Visual.vue?vue&type=script&lang=js&\"\nexport * from \"./Visual.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}