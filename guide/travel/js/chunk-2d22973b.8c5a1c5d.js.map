{"version":3,"sources":["webpack:///./src/views/Gather.vue?dd16","webpack:///./src/mixins/Gather/move.js","webpack:///./src/mixins/Gather/drawLine.js","webpack:///src/views/Gather.vue","webpack:///./src/views/Gather.vue?276e","webpack:///./src/views/Gather.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","id","staticRenderFns","PI","Math","cos","sin","random","round","move","floor","methods","addMoveSec","addFusion","addAnalysis","addProduct","addService","addOther","group","THREE","Group","xArr","i","texture","loadTexture","concat","mat","SpriteMaterial","map","sprite","Sprite","scale","set","position","x","z","bindFusionAnim","add","mainGroup","analysis","addSingalSec","y","text","textSprite","textColor","sateliteGroup","addSatelite","product","stage","bindFloatAnim","productLineAnim","cube","aperture","r","seg","pointMat","color","transparent","pointsArr","lineGroup","geom","Geometry","d","v","v3","vertices","push","circleLine","initLine","rot","rotation","point","geometry","bindSateliteAnim","obj","a","tween","createTween","start","end","easing","duration","delay","repeat","Infinity","yoyo","onUpdate","o","_this","children","forEach","p","I","assign_default","animList","shift","next","chain","geomUp","geomDown","upArr","downArr","up","down","upPoints","addPoints","g","b","downPoints","gt","pt","yt","gm","pm","ym","matArr","length","bindCrossAnim","tweenIn","onStart","onComplete","tweenOut","_this2","_loop","lineArr","lineColor","pointsColor","drawLine","lineDic","line","myLine","_this$countMid","countMid","p1","p2","initBezier","lineList","rgb","isBezier","addLineAnim","arguments","undefined","calcVector","vl","calcVectorLength","uv","vectorUnit","d1","d2","m1","vectorAdd","vectorNumMultiply","m2","sv","vectorProduct","data","item","pointsGeom","verticesGroup","fromBufferGeometry","mergeVertices","points","verticesNeedUpdate","firstAnim","lastAnim","window","setTimeout","Gathervue_type_script_lang_js_THREE","TWEEN","Gathervue_type_script_lang_js_","mixins","threeMixin","math","common","sectionArr","name","initWebGL","_this$initBasics","initBasics","$refs","canvas","antialias","clearColor","shadowEnabled","scene","camera","renderer","resetCameraPosition","renderScene","update","requestAnimationFrame","addSource","addTags","addSection","addCollector","addBackground","sourceGroup","successTexture","failedTexture","successMat","distance","screenPosition","world2screen","$store","commit","type","index","collector","createPoints","size","timer","recursion","clearTimeout","img","secGroup","sec","_sec$position","views_Gathervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d22973b.8c5a1c5d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{ref:\"canvas\",attrs:{\"id\":\"WebGL-output\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const { PI, cos, sin, random, round, floor } = Math;\n\nexport default {\n    methods: {\n        addMoveSec() {\n            this.addFusion();\n            this.addAnalysis();\n            this.addProduct();\n            this.addService();\n            this.addOther();\n        },\n        addFusion() {\n            const group = new THREE.Group();\n            const xArr = [0, -3, 2, 7];\n            for (let i = 0; i < 4; i++) {\n                const texture = this.loadTexture(`img/fusion_${i+1}.png`);\n                const mat = new THREE.SpriteMaterial({ map: texture });\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set((i === 0) ? 28 : 11, 54, 1);\n                sprite.position.x = xArr[i];\n                sprite.position.z = (4-i)*0.01;\n                if (i !== 0) this.bindFusionAnim(sprite);\n                group.add(sprite);\n            }\n            group.position.set(-23, -10, -1);\n            this.mainGroup.add(group);\n        },\n        addAnalysis() { // 数据建模分析\n            const analysis = this.addSingalSec('analysis', { x: 43, y: 43 }, { x: 37, y: -12 });\n            const text = this.textSprite('数据建模分析', {\n                textColor: '#DCDCDC',\n                scale: 30,\n            });\n            text.position.y = -25;\n            analysis.add(text);\n\n            // 环绕卫星效果\n            const sateliteGroup = this.addSatelite();\n            analysis.add(sateliteGroup);\n        },\n        addProduct() { // 数据产品\n            const product = this.addSingalSec('product', { x: 25, y: 25 }, { x: 195, y: 8 });\n            const stage = this.addSingalSec('stage', { x: 75, y: 75 }, { x: 195, y: -10 });\n            this.bindFloatAnim(product, 2000);\n            this.productLineAnim(stage);\n        },\n        addService() { // 服务治理\n            const cube = this.addSingalSec('cube', { x: 41, y: 41 }, { x: 111, y: -4, z: 1 });\n            const aperture = this.addSingalSec('aperture', { x: 70, y: 70 }, { x: 111, y: -7 });\n            const lighting = this.addSingalSec('lighting', { x: 60, y: 60 }, { x: 110.4, y: -8, z: 2 });\n            const text = this.textSprite('服务治理', {\n                textColor: '#DCDCDC',\n                scale: 30,\n            });\n            text.position.y = -30;\n            aperture.add(text);\n            this.bindFloatAnim(cube, 3000);\n        },\n        addSatelite() {\n            const group = new THREE.Group();\n            // 半径25，圆79分段\n            const r = 23;\n            const seg = 73;\n            const pointMat = new THREE.SpriteMaterial({\n                color: 0xffffff,\n                transparent: true,\n                map: this.loadTexture('img/point.png'),\n            });\n            const pointsArr = [];\n            for (let i = 0; i < 4; i++) {\n                const lineGroup = new THREE.Group();\n                const geom = new THREE.Geometry();\n                for (let d = 0; d <= 2*PI; d += PI*2/seg) {\n                    const x = r * cos(d);\n                    const y = r * sin(d);\n                    const v = this.v3(x, y, 0);\n                    geom.vertices.push(v);\n                }\n                const circleLine = this.initLine(geom, {\n                    color: 0x1FF0F8,\n                });\n                lineGroup.add(circleLine);\n                const rot = lineGroup.rotation;\n                switch (i) {\n                    case 0:\n                        rot.set(PI/4, PI/4, 0);\n                        break;\n                    case 1:\n                        rot.set(PI/2, 0, 0);\n                        break;\n                    case 2:\n                        rot.set(PI/4*3, PI/4*3, 0);\n                        break;\n                    case 3:\n                        rot.set(PI, 0, 0);\n                        break;\n                    default:\n                        break;\n                }\n                const point = new THREE.Sprite(pointMat);\n                point.scale.set(7, 7, 7);\n                const vertices = circleLine.geometry.vertices;\n                point.position.set(vertices[0].x, vertices[0].y, vertices[0].z);\n                pointsArr.push(point);\n                lineGroup.add(point);\n                group.add(lineGroup);\n            }\n            this.bindSateliteAnim(pointsArr, group);\n            return group;\n        },\n        bindFusionAnim(obj) {\n            const a = { x: obj.position.x };\n            const tween = this.createTween({\n                start: a,\n                end: { x: -8 },\n                easing: 'InOut',\n                duration: 2000,\n                delay: 500,\n                repeat: Infinity,\n                yoyo: true,\n                onUpdate: (o) => {\n                    obj.position.x = o.x;\n                },\n            });\n            tween.start();\n        },\n        bindSateliteAnim(pointsArr, group) {\n            const lineGroup = group.children;\n            const vertices = lineGroup[0].children[0].geometry.vertices;\n            pointsArr.forEach((p, I) => {\n                const start = Object.assign({}, vertices[0]);\n                const duration = random() * 30 + 20;\n                const animList = vertices.map((v, i) => {\n                    if (i === 0) return;\n                    const { x, y, z } = v;\n                    const tween = this.createTween({\n                        start,\n                        end: { x, y, z },\n                        duration,\n                        onUpdate: ((o) => {\n                           p.position.set(o.x, o.y, o.z);\n                        }),\n                    });\n                    return tween;\n                });\n                animList.shift();\n                animList.forEach((a, i) => {\n                    const next = animList[i+1];\n                    if (next) {\n                        a.chain(next);\n                    } else {\n                        a.chain(animList[0]);\n                    }\n                });\n                animList[0].start();\n            });\n            const tween = this.createTween({\n                start: { r: 0 },\n                end: { r: PI * 2 },\n                duration: 5000,\n                repeat: Infinity,\n                onUpdate: ((o) => {\n                    group.rotation.x = o.r;\n                }),\n            });\n            tween.start();\n        },\n        bindFloatAnim(obj, duration) {\n            const a = { y: obj.position.y };\n            const tween = this.createTween({\n                start: a,\n                end: { y: a.y + 2 },\n                duration,\n                onUpdate: (o) => {\n                    obj.position.y = o.y;\n                },\n                repeat: Infinity,\n                yoyo: true,\n            });\n            tween.start();\n        },\n        addOther() { // 添加剩余元素\n            const geomUp = new THREE.Geometry();\n            const geomDown = new THREE.Geometry();\n            const upArr = [{ x: 8, y: -10 }, { x: 75, y: -10 }, { x: 155, y: -10 }];\n            const downArr = [{ x: 3, y: -16 }, { x: 70, y: -16 }, { x: 150, y: -16 }];\n            for (let i = 0; i < 3; i++) {\n                const up = upArr[i];\n                up.z = 0;\n                const down = downArr[i];\n                down.z = 0;\n                geomUp.vertices.push(up);\n                geomDown.vertices.push(down);\n            }\n            const upPoints = this.addPoints(geomUp, { r: 197, g: 29, b: 202 });\n            const downPoints = this.addPoints(geomDown, { r: 113, g: 242, b: 173 });\n            this.mainGroup.add(upPoints);\n            this.mainGroup.add(downPoints);\n\n            const gt = this.loadTexture('img/cross_green.png');\n            const pt = this.loadTexture('img/cross_purple.png');\n            const yt = this.loadTexture('img/cross_yellow.png');\n            const gm = new THREE.SpriteMaterial({ map: gt });\n            const pm = new THREE.SpriteMaterial({ map: pt });\n            const ym = new THREE.SpriteMaterial({ map: yt });\n            const matArr = [gm, pm, ym];\n\n            for (let i = 0; i < 10; i++) {\n                const mat = matArr[round(random() * (matArr.length - 1))];\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(10, 0.8, 1);\n                sprite.position.x = -14;\n                sprite.position.y = (i%2 === 0) ? -10 : -16;\n                sprite.position.z = -100;\n                this.bindCrossAnim(sprite);\n                this.mainGroup.add(sprite);\n            }\n        },\n        bindCrossAnim(obj) {\n            const x = obj.position.x;\n            const a = { x };\n            const tweenIn = this.createTween({\n                start: a,\n                end: { x: x + 200 },\n                duration: random() * 1000 + 2000,\n                delay: random() * 5000,\n                onStart: (() => {\n                    obj.position.z = -1;\n                }),\n                onUpdate: ((o) => {\n                    obj.position.x = o.x;\n                }),\n                onComplete: (() => {\n                    a.x = x;\n                    obj.position.z = -100;\n                }),\n            });\n            const tweenOut = this.createTween({\n                start: {},\n                end: {},\n                duration: 20,\n            });\n            tweenIn.chain(tweenOut);\n            tweenOut.chain(tweenIn);\n            tweenIn.start();\n        },\n        productLineAnim(group) {\n            const gt = this.loadTexture('img/line1.png');\n            const pt = this.loadTexture('img/line2.png');\n            const yt = this.loadTexture('img/line3.png');\n            const gm = new THREE.SpriteMaterial({ map: gt });\n            const pm = new THREE.SpriteMaterial({ map: pt });\n            const ym = new THREE.SpriteMaterial({ map: yt });\n            const matArr = [gm, pm, ym];\n\n            for (let i = 0; i < 3; i++) {\n                const mat = matArr[i];\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(0.73, 10, 1);\n                sprite.position.set((i-1)*14, -5, -100);\n\n                const a = { y: -5 };\n                const tween = this.createTween({\n                    start: a,\n                    end: { y: 300 },\n                    duration: 2000,\n                    delay: random() * 1000,\n                    onStart: (() => {\n                        sprite.position.z = -1;\n                    }),\n                    onUpdate: ((o) => {\n                        sprite.position.y = o.y;\n                    }),\n                    onComplete: ((o) => {\n                        a.y = -5;\n                        sprite.position.z = -100;\n                    }),\n                });\n                const tweenOut = this.createTween({\n                    start: {},\n                    end: {},\n                    duration: 20,\n                });\n                tween.chain(tweenOut);\n                tweenOut.chain(tween);\n                tween.start();\n\n                group.add(sprite);\n            }\n        },\n    },\n};","const { random, round } = Math;\n\nconst lineArr = [{\n    start: { x: -207.5, y: 43 },\n    end: { x: -169, y: 2 },\n    // lineColor: '#F5222D',\n    // pointsColor: { r: 245, g: 34, b: 45 },\n    lineColor: '#1FF8B5',\n    pointsColor: { r: 31, g: 248, b: 181 },\n    shift: 10,\n}, {\n    start: { x: -207.5, y: 15 },\n    end: { x: -169, y: -2.5 },\n    lineColor: '#1FF8B5',\n    pointsColor: { r: 31, g: 248, b: 181 },\n    shift: 7,\n}, {\n    start: { x: -207.5, y: -12.5 },\n    end: { x: -169, y: -7 },\n    lineColor: '#1FF8B5',\n    pointsColor: { r: 31, g: 248, b: 181 },\n    shift: -5,\n}, {\n    start: { x: -207.5, y: -40 },\n    end: { x: -169, y: -11.5 },\n    lineColor: '#1FF8B5',\n    pointsColor: { r: 31, g: 248, b: 181 },\n    shift: -10,\n}, {\n    start: { x: -207.5, y: -67.5 },\n    end: { x: -169, y: -16 },\n    lineColor: '#1FF8B5',\n    pointsColor: { r: 31, g: 248, b: 181 },\n    shift: -15,\n}, {\n    start: { x: -103.5, y: 17.5 },\n    end: { x: -91.5, y: -1 },\n    lineColor: '#CF6923',\n    pointsColor: { r: 207, g: 105, b: 35 },\n    shift: -8,\n}, {\n    start: { x: -68, y: 17.5 },\n    end: { x: -81, y: -1 },\n    lineColor: '#CF6923',\n    pointsColor: { r: 207, g: 105, b: 35 },\n    shift: 8,\n}, {\n    start: { x: -121, y: -45 },\n    end: { x: -92, y: -19 },\n    lineColor: '#CF6923',\n    pointsColor: { r: 207, g: 105, b: 35 },\n    shift: 14,\n}, {\n    start: { x: -86, y: -45 },\n    end: { x: -85.5, y: -19 },\n    lineColor: '#CF6923',\n    pointsColor: { r: 207, g: 105, b: 35 },\n    shift: 6,\n}, {\n    start: { x: -51, y: -45 },\n    end: { x: -79, y: -19 },\n    lineColor: '#CF6923',\n    pointsColor: { r: 207, g: 105, b: 35 },\n    shift: -14,\n}, {\n    start: { x: -131.5, y: -10 },\n    end: { x: -33, y: -10 },\n    lineColor: '#1C82E9',\n    pointsColor: { r: 28, g: 130, b: 233 },\n    shift: 0,\n}, {\n    start: { x: -131.5, y: -6 },\n    end: { x: -33, y: -14 },\n    lineColor: '#1C82E9',\n    pointsColor: { r: 28, g: 130, b: 233 },\n    shift: 0,\n}, {\n    start: { x: -131.5, y: -14 },\n    end: { x: -33, y: -6 },\n    lineColor: '#1C82E9',\n    pointsColor: { r: 28, g: 130, b: 233 },\n    shift: 0,\n}, {\n    start: { x: -131.5, y: -19 },\n    end: { x: -33, y: -1 },\n    lineColor: '#1C82E9',\n    pointsColor: { r: 28, g: 130, b: 233 },\n    shift: 0,\n}, {\n    start: { x: -131.5, y: -1 },\n    end: { x: -33, y: -19 },\n    lineColor: '#1C82E9',\n    pointsColor: { r: 28, g: 130, b: 233 },\n    shift: 0,\n}, {\n    start: { x: -10, y: -13 },\n    end: { x: 15, y: -13 },\n    lineColor: '#C51DCA',\n    pointsColor: { r: 197, g: 29, b: 202 },\n    shift: 0,\n}, {\n    start: { x: 60, y: -13 },\n    end: { x: 80, y: -13 },\n    lineColor: '#1FCBF8',\n    pointsColor: { r: 31, g: 203, b: 248 },\n    shift: 0,\n}, {\n    start: { x: 140, y: -13 },\n    end: { x: 158, y: -13 },\n    lineColor: '#20F8B5',\n    pointsColor: { r: 32, g: 248, b: 181 },\n    shift: 0,\n}];\n\nexport default {\n    methods: {\n        drawLine() {\n            // 以颜色线分组\n            const lineDic = {};\n            lineArr.forEach((line) => {\n                line.start.z = 0;\n                line.end.z = 0;\n                let myLine;\n                const { p1, p2 } = this.countMid(line.start, line.end, line.shift);\n                myLine = this.initBezier([line.start, p1, p2, line.end], {\n                    color: line.lineColor,\n                });\n                this.lineGroup.add(myLine);\n\n                // 点动画\n                if (!lineDic[line.lineColor]) {\n                    lineDic[line.lineColor] = {\n                        lineList: [],\n                        rgb: line.pointsColor,\n                        isBezier: line.isBezier,\n                    };\n                }\n                lineDic[line.lineColor].lineList.push(myLine);\n            });\n            this.addLineAnim(lineDic);\n        },\n        countMid(start, end, shift = 10) {\n            const v = this.calcVector(start, end);\n            const vl = this.calcVectorLength(v);\n            const uv = this.vectorUnit(v);\n            const d1 = vl * 0.4;\n            const d2 = vl * 0.7;\n            const m1 = this.vectorAdd(start, this.vectorNumMultiply(uv, d1));\n            const m2 = this.vectorAdd(start, this.vectorNumMultiply(uv, d2));\n            // 垂直向量\n            const sv = this.vectorProduct(uv, { x: 0, y: 0, z: -1 }, true);\n            const p1 = this.vectorAdd(m1, this.vectorNumMultiply(sv, shift));\n            const p2 = this.vectorAdd(m2, this.vectorNumMultiply(this.vectorNumMultiply(sv, -0.5), shift));\n            return { p1, p2 };\n        },\n        addLineAnim(data) {\n            for (let o in data) {\n                const item = data[o];\n                // 用来绘制动画点\n                const pointsGeom = new THREE.Geometry();\n                const verticesGroup = [];\n                item.lineList.forEach((line) => {\n                    const geom = new THREE.Geometry().fromBufferGeometry(line.geometry);\n                    geom.mergeVertices();\n                    pointsGeom.vertices.push(geom.vertices[0]);\n                    verticesGroup.push(geom.vertices);\n                });\n                const points = this.addPoints(pointsGeom, item.rgb);\n                this.lineGroup.add(points);\n\n                verticesGroup.forEach((vertices, I) => {\n                    const animList = [];\n                    // start 用于一轮动画结束复位\n                    const start = Object.assign({}, vertices[0]);\n                    const obj = points.geometry.vertices[I];\n                    const duration = random() * 50 + 50;\n                    const delay = random() * 1000;\n\n                    vertices.forEach((v, i) => {\n                        if (i === 0) return;\n                        const { x, y, z } = v;\n                        const tween = this.createTween({\n                            start: obj,\n                            end: { x, y, z },\n                            duration,\n                            onUpdate: () => {\n                                points.geometry.verticesNeedUpdate = true;\n                            },\n                        });\n                        animList.push(tween);\n                    });\n\n                    const firstAnim = animList[0];\n                    const lastAnim = animList[animList.length - 1];\n                    lastAnim.onComplete(() => {\n                        points.geometry.verticesNeedUpdate = true;\n                        obj.z = -100;\n                        const timer = window.setTimeout(() => {\n                            points.geometry.verticesNeedUpdate = true;\n                            obj.x = start.x;\n                            obj.y = start.y;\n                            obj.z = start.z;\n                            firstAnim.start();\n                        }, delay);\n                    });\n\n                    animList.forEach((a, i) => {\n                        if (i === animList.length - 1) {\n                            return;\n                        }\n                        const next = animList[i+1];\n                        a.chain(next);\n                    });\n\n                    firstAnim.start();\n                });\n            }\n        },\n    },\n};","<template>\n    <div class='container'>\n        <!-- <div v-show='isLoading' class='loading'>Loading...</div> -->\n        <!-- <div ref='stats'></div> -->\n        <div ref='canvas' id='WebGL-output'></div>\n    </div>\n</template>\n\n<script>\nimport math from '../mixins/math.js';\nimport mixin from '../mixins/threeMixin.js';\nimport common from '../mixins/common.js';\nimport move from '../mixins/Gather/move.js';\nimport drawLine from '../mixins/Gather/drawLine.js';\n\nconst { PI, cos, sin, floor } = Math;\nconst { THREE, TWEEN } = window;\nexport default {\n    mixins: [mixin, math, common, move, drawLine],\n    data() {\n        return {\n            sectionArr: [{\n                id: 'storage',\n                name: '数据存储',\n                position: { x: -103, y: 32 },\n            }, {\n                id: 'clean',\n                name: '数据清洗',\n                position: { x: -68, y: 32 },\n            }, {\n                id: 'exchange',\n                name: '数据交换',\n                position: { x: -121, y: -60 },\n            }, {\n                id: 'directory',\n                name: '数据目录',\n                position: { x: -86, y: -60 },\n            }, {\n                id: 'standard',\n                name: '数据标准化',\n                position: { x: -51, y: -60 },\n            }],\n            mainGroup: new THREE.Group(),\n            lineGroup: new THREE.Group(),\n        };\n    },\n    methods: {\n        initWebGL() {\n            const { scene, camera, renderer } = this.initBasics(this.$refs.canvas, {\n                position: { x: 0, y: 0, z: 0 }, antialias: true\n            }, {\n                clearColor: 0x000000,\n                shadowEnabled: true,\n            });\n            this.scene = scene;\n            this.camera = camera;\n            this.renderer = renderer;\n            this.scene.add(this.mainGroup);\n            this.mainGroup.add(this.lineGroup);\n\n            this.resetCameraPosition();\n\n            // this.addAxes(250);\n            // const stats = this.initStats(this.$refs.stats);\n\n            // const control = this.addControl();\n            // const clock = new THREE.Clock();\n\n            (function renderScene() {\n                // stats.update();\n                TWEEN.update();\n                // const delta = clock.getDelta();\n                // control.update(delta);\n                requestAnimationFrame(renderScene);\n                renderer.render(scene, camera);\n            })();\n\n            this.addSource();\n            // 右上角标签位置\n            this.addTags();\n\n            this.addSection();\n            this.addCollector();\n            this.addSingalSec('transmit', { x: 42, y: 42 }, { x: -88, y: -10, z: 0.1 });\n            this.addBackground();\n\n            // 可动模块\n            this.addMoveSec();\n            this.drawLine();\n        },\n        addSource() {\n            const sourceGroup = new THREE.Group();\n            const successTexture = this.loadTexture('img/source_success.png');\n            const failedTexture = this.loadTexture('img/source_faild.png');\n            const successMat = new THREE.SpriteMaterial({ map: successTexture });\n            const failedMat = new THREE.SpriteMaterial({ map: failedTexture });\n            const start = 48;\n            const distance = 27.5;\n            for (let i = 0; i < 5; i++) {\n                // const mat = i === 0 ? failedMat : successMat;\n                const mat = successMat;\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(27, 27, 1);\n                const y = start - i * distance;\n                sprite.position.set(-220, y, 0);\n                sourceGroup.add(sprite);\n\n                const screenPosition = this.world2screen(this.v3(-220, y, 0), this.$refs.canvas);\n                this.$store.commit('addGatherData', {\n                    type: 'source',\n                    index: i+1,\n                    position: screenPosition,\n                });\n            }\n            this.mainGroup.add(sourceGroup);\n        },\n        addTags() {\n            const y = 50;\n            let start = 5;\n            const distance = 59;\n            for (let i = 0; i < 4; i ++) {\n                const x = start + i * distance;\n                const screenPosition = this.world2screen(this.v3(x, y, 0), this.$refs.canvas);\n                this.$store.commit('addGatherData', {\n                    type: 'tags',\n                    index: i+1,\n                    position: screenPosition,\n                });\n            }\n        },\n        addCollector() {\n            const collector = this.addSingalSec('collector', { x: 60, y: 60 }, { x: -152, y: -10, z: -0.1 });\n            const texture = this.loadTexture('img/collector-path.png');\n            const geom = new THREE.Geometry();\n            for (let i = 0; i < 16; i++) {\n                const x = i * 1.5 - 8.2;\n                geom.vertices.push(this.v3(x, -10.05, -100));\n            }\n            const points = this.createPoints(geom, {\n                map: texture,\n                size: 3,\n                transparent: true,\n            });\n            collector.add(points);\n\n            (function collectorAnim() {\n                let timer = null;\n                (function recursion(i) {\n                    window.clearTimeout(timer);\n                    const v = points.geometry.vertices[i];\n                    points.geometry.verticesNeedUpdate = true;\n                    if (!v) {\n                        points.geometry.vertices.forEach((p) => {\n                            p.z = -100;\n                        });\n                        recursion(0);\n                    } else {\n                        v.z = 1;\n                        timer = window.setTimeout(() => {\n                            recursion(i+1);\n                        }, 300);\n                    }\n                })(0);\n            })();\n        },\n        addSingalSec(img, scale = {}, position = {}) {\n            const group = new THREE.Group();\n            const texture = this.loadTexture(`img/${img}.png`);\n            const mat = new THREE.SpriteMaterial({ map: texture });\n            const sprite = new THREE.Sprite(mat);\n            sprite.scale.set(scale.x, scale.y, 1);\n            group.add(sprite);\n            group.position.set(position.x, position.y, position.z || 0);\n            this.mainGroup.add(group);\n            return group;\n        },\n        addSection() {\n            const secGroup = new THREE.Group();\n            this.sectionArr.forEach((sec) => {\n                const group = new THREE.Group();\n                const texture = this.loadTexture(`img/${sec.id}.png`);\n                const mat = new THREE.SpriteMaterial({ map: texture });\n                const sprite = new THREE.Sprite(mat);\n                sprite.scale.set(30, 30, 1);\n                group.add(sprite);\n                const text = this.textSprite(sec.name, {\n                    textColor: '#DCDCDC',\n                    scale: 30,\n                });\n                text.position.y = 13;\n                group.add(text);\n                const { x, y } = sec.position;\n                group.position.set(x, y, 1);\n                secGroup.add(group);\n            });\n            this.mainGroup.add(secGroup);\n        },\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gather.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gather.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Gather.vue?vue&type=template&id=c5435ac4&\"\nimport script from \"./Gather.vue?vue&type=script&lang=js&\"\nexport * from \"./Gather.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}