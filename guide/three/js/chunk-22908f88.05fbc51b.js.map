{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/three/examples/js/shaders/CopyShader.js","webpack:///./src/assets/imgs/world.png","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./src/mixins/math.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./src/views/Pass.vue?0909","webpack:///src/views/Pass.vue","webpack:///./src/views/Pass.vue?7e1e","webpack:///./src/views/Pass.vue","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/three/examples/js/shaders/FilmShader.js","webpack:///./node_modules/three/examples/js/postprocessing/EffectComposer.js","webpack:///./node_modules/three/examples/js/postprocessing/RenderPass.js","webpack:///./node_modules/three/examples/js/postprocessing/FilmPass.js","webpack:///./node_modules/three/examples/js/postprocessing/MaskPass.js","webpack:///./node_modules/three/examples/js/postprocessing/ShaderPass.js","webpack:///./node_modules/core-js/modules/_string-ws.js"],"names":["pIE","__webpack_require__","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","Object","getOwnPropertyDescriptor","exports","f","O","P","e","call","THREE","CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","module","p","fails","method","arg","PI","Math","sin","cos","__webpack_exports__","methods","deg2rad","degree","Number","rad2deg","radian","distance","p1","p2","dx","pow","x","dy","y","dz","z","d","sqrt","vacuate","dataArr","_this","this","arguments","length","undefined","index","arr","forEach","item","indexOf","push","SOD","data","a11","a12","a21","a22","TOD","a13","a23","a31","a32","a33","res","lglt2xyz","lng","lat","r","splitArray","num","max","len","ceil","result","sort","diff","random","i","slice","$export","aFunction","toObject","$sort","test","F","comparefn","isObject","setPrototypeOf","set","that","target","C","S","constructor","prototype","anObject","check","proto","TypeError","buggy","Function","Array","__proto__","$keys","hiddenKeys","concat","getOwnPropertyNames","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","id","staticRenderFns","window","TWEEN","Passvue_type_script_lang_js_","mixins","threeMixin","math","initWebGL","_this$initBasics","initBasics","$refs","canvas","position","antialias","clearColor","scene","camera","renderer","addLight","sphere","addObject","control","addControl","clock","Clock","composer","initPass","renderScene","update","delta","getDelta","rotation","requestAnimationFrame","renderPass","RenderPass","effectFilm","FilmPass","renderToScreen","EffectComposer","addPass","geom","initGeometry","texture","loadTexture","mat","MeshPhongMaterial","map","mesh","Mesh","add","lightGroup","Group","ambientLight","initLight","color","directionalLight","intensity","castShadow","shadow","near","far","left","right","top","bottom","mapSize","width","height","addAxes","axes","initAxes","initControls","rotateSpeed","zoomSpeed","panSpeed","mounted","views_Passvue_type_script_lang_js_","component","componentNormalizer","defined","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","string","TYPE","String","replace","global","cof","inheritIfRequired","gOPN","dP","$trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","l","parseInt","valueOf","key","keys","split","j","FilmShader","time","nIntensity","sIntensity","sCount","grayscale","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","_height","WebGLRenderTarget","name","renderTarget1","renderTarget2","clone","writeBuffer","readBuffer","passes","console","error","ShaderPass","copyPass","assign","swapBuffers","tmp","pass","setSize","insertPass","splice","isLastEnabledPass","passIndex","enabled","deltaTime","currentRenderTarget","getRenderTarget","maskActive","il","needsSwap","context","getContext","stencil","state","buffers","setFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","setRenderTarget","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","Pass","clear","FullScreenQuad","OrthographicCamera","geometry","PlaneBufferGeometry","material","_mesh","defineProperty","get","overrideMaterial","clearAlpha","clearDepth","create","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","noiseIntensity","scanlinesIntensity","scanlinesCount","shader","UniformsUtils","ShaderMaterial","fsQuad","inverse","writeValue","clearValue","setMask","depth","setLocked","setTest","setOp","REPLACE","ALWAYS","setClear","KEEP","textureID","defines"],"mappings":"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","file":"js/chunk-22908f88.05fbc51b.js","sourcesContent":["var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n","module.exports = __webpack_public_path__ + \"img/world.d1cec69f.png\";","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","const { PI, sin, cos } = Math;\n\nexport default {\n    methods: {\n        deg2rad(degree) { // 角度转弧度\n            degree = Number(degree);\n            return degree * PI / 180;\n        },\n        rad2deg(radian) { // 弧度转角度\n            radian = Number(radian);\n            return radian * 180 / PI;\n        },\n        distance(p1, p2) { // 计算两点间距离\n            const dx = Math.pow(p2.x - p1.x, 2);\n            const dy = Math.pow(p2.y - p1.y, 2);\n            const dz = Math.pow(p2.z - p2.z, 2);\n            const d = Math.sqrt(dx + dy + dz);\n            return d;\n        },\n        vacuate(dataArr, distance = 0) { // 基于距离的数据抽稀\n            let index = dataArr[0]; // 数组索引指针\n            const arr = [index];\n            dataArr.forEach((item) => {\n                if (this.distance(item, index) > distance && arr.indexOf(item) < 0) {\n                    index = item;\n                    arr.push(index);\n                }\n            });\n            return arr;\n        },\n        SOD(data) { // secondOrderDeterminant, 解二阶行列式\n            const a11 = data[0][0];\n            const a12 = data[0][1];\n            const a21 = data[1][0];\n            const a22 = data[1][1];\n            return a11 * a22 - a21 * a12;\n        },\n        TOD(data) { // thirdOrderDeterminant, 解三阶行列式\n            const a11 = data[0][0];\n            const a12 = data[0][1];\n            const a13 = data[0][2];\n            const a21 = data[1][0];\n            const a22 = data[1][1];\n            const a23 = data[1][2];\n            const a31 = data[2][0];\n            const a32 = data[2][1];\n            const a33 = data[2][2];\n            const res = (a11 * a22 * a33) + (a13 * a21 * a22) + (a12 * a23 * a31) - (a13 * a22 * a31) - (a12 * a21 * a33) - (a11 * a23 * a32);\n            return res;\n        },\n        lglt2xyz(lng, lat, r) { // 经纬度转三维坐标\n            lng = this.deg2rad(lng);\n            lat = this.deg2rad(lat);\n            const x = r * cos(lat) * sin(lng);\n            const y = r * sin(lat);\n            const z = r * cos(lat) * cos(lng);\n            return { x, y, z };\n        },\n        splitArray(arr, num) { // 将数组随便拆分为指定个数\n            const max = arr.length;\n            const len = Math.ceil(max / num);\n            const result = [];\n            arr.sort(() => {\n                const diff = Math.random() - Math.random();\n                return diff;\n            });\n            for (let i = 0; i < max; i += len) {\n                result.push(arr.slice(i, i + len));\n            }\n            return result;\n        },\n    },\n};","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{ref:\"stats\"}),_c('div',{ref:\"canvas\",attrs:{\"id\":\"WebGL-output\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class='container'>\n        <div ref='stats'></div>\n        <div ref='canvas' id='WebGL-output'></div>\n    </div>\n</template>\n\n<script>\nimport threeMixin from '../mixins/threeMixin';\nimport math from '../mixins/math';\nimport 'three/examples/js/postprocessing/EffectComposer';\nimport 'three/examples/js/postprocessing/MaskPass';\nimport 'three/examples/js/postprocessing/RenderPass';\nimport 'three/examples/js/postprocessing/ShaderPass';\nimport 'three/examples/js/postprocessing/FilmPass';\nimport 'three/examples/js/shaders/FilmShader';\nimport 'three/examples/js/shaders/CopyShader';\n\nconst { TWEEN, THREE } = window;\nconst { PI } = Math;\nexport default {\n    mixins: [threeMixin, math],\n    methods: {\n        initWebGL() {\n            const { scene, camera, renderer } = this.initBasics(this.$refs.canvas, {\n                position: { x: 0, y: 0, z: 40 }, antialias: true\n            }, {\n                clearColor: 0x000000,\n            });\n            this.scene = scene;\n            this.camera = camera;\n            this.renderer = renderer;\n\n            this.addLight();\n            const sphere = this.addObject();\n\n            const control = this.addControl();\n            const clock = new THREE.Clock();\n\n            const composer = this.initPass();\n\n            const renderScene = () => {\n                TWEEN.update();\n                const delta = clock.getDelta();\n                control.update(delta);\n                sphere.rotation.y += 0.003;\n                requestAnimationFrame(renderScene);\n                composer.render(delta);\n            };\n            renderScene();\n        },\n        initPass() {\n            const renderPass = new THREE.RenderPass(this.scene, this.camera);\n            const effectFilm = new THREE.FilmPass(0.8, 0.325, 256, false);\n            effectFilm.renderToScreen = true;\n            const composer = new THREE.EffectComposer(this.renderer);\n            composer.addPass(renderPass);\n            composer.addPass(effectFilm);\n            return composer;\n        },\n        addObject() {\n            const geom = this.initGeometry('Sphere', 10, 32, 32);\n            const texture = this.loadTexture(require('../assets/imgs/world.png'));\n            const mat = new THREE.MeshPhongMaterial({\n                map: texture,\n            });\n            const mesh = new THREE.Mesh(geom, mat);\n            this.scene.add(mesh);\n            return mesh;\n        },\n        addLight() {\n            const lightGroup = new THREE.Group();\n            const ambientLight = this.initLight('Ambient', {color: 0xeeeeee});\n            const directionalLight = this.initLight('Directional', {\n                color: 0xeeeeee,\n                intensity: 0.2,\n                position: {x: 10, y: 20, z: 10},\n                castShadow: true,\n                shadow: {\n                    camera: {\n                        near: 2,\n                        far: 40,\n                        left: -15,\n                        right: 15,\n                        top: 15,\n                        bottom: -15,\n                    },\n                    mapSize: {\n                        width: 2048,\n                        height: 2048,\n                    },\n                },\n            });\n            // const helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n            // this.scene.add(helper);\n            lightGroup.add(ambientLight);\n            lightGroup.add(directionalLight);\n            this.scene.add(lightGroup);\n        },\n        addAxes(len) { // 默认辅助坐标系\n            const axes = this.initAxes(len);\n            this.scene.add(axes);\n        },\n        addControl() {\n            const control = this.initControls('Trackball', this.camera, {\n                rotateSpeed: 1.0,\n                zoomSpeed: 1.0,\n                panSpeed: 1.0,\n            });\n            return control;\n        },\n    },\n    mounted() {\n        this.initWebGL();\n    }\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Pass.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Pass.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Pass.vue?vue&type=template&id=1e355c99&\"\nimport script from \"./Pass.vue?vue&type=script&lang=js&\"\nexport * from \"./Pass.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nTHREE.FilmShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"time\": { value: 0.0 },\n\t\t\"nIntensity\": { value: 0.5 },\n\t\t\"sIntensity\": { value: 0.05 },\n\t\t\"sCount\": { value: 4096 },\n\t\t\"grayscale\": { value: 1 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"#include <common>\",\n\n\t\t// control parameter\n\t\t\"uniform float time;\",\n\n\t\t\"uniform bool grayscale;\",\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float nIntensity;\",\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float sIntensity;\",\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\"uniform float sCount;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// sample the source\n\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t// make some noise\n\t\t\t\"float dx = rand( vUv + time );\",\n\n\t\t\t// add noise\n\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\",\n\n\t\t\t// get us a sine and cosine\n\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t// add scanlines\n\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t// interpolate between source and result by intensity\n\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t// convert to grayscale if desired\n\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new THREE.Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis.clock = new THREE.Clock();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.getContext();\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new THREE.Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\tTHREE.Pass.call( this );\n\n\tif ( THREE.FilmShader === undefined )\n\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\tvar shader = THREE.FilmShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n};\n\nTHREE.FilmPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.FilmPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime /*, maskActive */ ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.uniforms[ \"time\" ].value += deltaTime;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nTHREE.ClearMaskPass = function () {\n\n\tTHREE.Pass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nTHREE.ClearMaskPass.prototype = Object.create( THREE.Pass.prototype );\n\nObject.assign( THREE.ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n"],"sourceRoot":""}